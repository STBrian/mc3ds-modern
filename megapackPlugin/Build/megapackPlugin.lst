00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0000000c 00000008 B CTRPluginFramework::Renderer::_rendererContext
00000014 00000001 b __tls_guard
00000018 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000028 00000001 B CTRPluginFramework::PrivColor::_useClamp
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
0700012c t ClearMem
07000140 t ClrLoop
07000158 T _init
07000170 T initLib
070001a4 T __ctru_exit
070001d4 t .udivsi3_skip_div0_test
070001d4 T __aeabi_uidiv
070001d4 000001ec T __udivsi3
070003c0 00000020 T __aeabi_uidivmod
070003e0 T __aeabi_idiv
070003e0 00000220 T __divsi3
070003e8 t .divsi3_skip_div0_test
07000600 00000020 T __aeabi_idivmod
07000620 00000004 W __aeabi_idiv0
07000620 00000004 W __aeabi_ldiv0
07000624 0000019c T __aeabi_frsub
0700062c 00000194 T __aeabi_fsub
0700062c 00000194 T __subsf3
07000630 00000190 T __addsf3
07000630 00000190 T __aeabi_fadd
070007c0 00000028 T __aeabi_ui2f
070007c0 00000028 T __floatunsisf
070007c8 00000020 T __aeabi_i2f
070007c8 00000020 T __floatsisf
070007e8 0000008c T __aeabi_ul2f
070007e8 0000008c T __floatundisf
070007f8 0000007c T __aeabi_l2f
070007f8 0000007c T __floatdisf
07000874 T __aeabi_ldivmod
07000948 00000014 T __restore_core_regs
07000948 00000014 T restore_core_regs
0700095c T __gnu_Unwind_Restore_VFP
07000964 T __gnu_Unwind_Save_VFP
0700096c T __gnu_Unwind_Restore_VFP_D
07000974 T __gnu_Unwind_Save_VFP_D
0700097c T __gnu_Unwind_Restore_VFP_D_16_to_31
07000984 T __gnu_Unwind_Save_VFP_D_16_to_31
0700098c T __gnu_Unwind_Restore_WMMXD
070009d0 T __gnu_Unwind_Save_WMMXD
07000a14 T __gnu_Unwind_Restore_WMMXC
07000a28 T __gnu_Unwind_Save_WMMXC
07000a3c 00000024 T ___Unwind_RaiseException
07000a3c 00000024 T _Unwind_RaiseException
07000a60 00000024 T ___Unwind_Resume
07000a60 00000024 T _Unwind_Resume
07000a84 00000024 T ___Unwind_Resume_or_Rethrow
07000a84 00000024 T _Unwind_Resume_or_Rethrow
07000aa8 00000024 T ___Unwind_ForcedUnwind
07000aa8 00000024 T _Unwind_ForcedUnwind
07000acc 00000024 T ___Unwind_Backtrace
07000acc 00000024 T _Unwind_Backtrace
07000b08 00000390 T strcmp
07000e90 T __aeabi_drsub
07000e98 000002b0 T __aeabi_dsub
07000e98 000002b0 T __subdf3
07000e9c 000002ac T __adddf3
07000e9c 000002ac T __aeabi_dadd
07001148 00000024 T __aeabi_ui2d
07001148 00000024 T __floatunsidf
0700116c 00000028 T __aeabi_i2d
0700116c 00000028 T __floatsidf
07001194 00000048 T __aeabi_f2d
07001194 00000048 T __extendsfdf2
070011dc 00000074 T __aeabi_ul2d
070011dc 00000074 T __floatundidf
070011f0 00000060 T __aeabi_l2d
070011f0 00000060 T __floatdidf
07001250 T __aeabi_uldivmod
0700128c t __do_global_dtors_aux
070012cc t frame_dummy
070012f8 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07001380 00000074 T CTRPluginFramework::ninetyFov(CTRPluginFramework::MenuEntry*)
070013f4 00000088 T CTRPluginFramework::defaultCodes(CTRPluginFramework::MenuEntry*)
0700147c 000000e0 T CTRPluginFramework::removeMobCap(CTRPluginFramework::MenuEntry*)
0700155c 00000070 T CTRPluginFramework::itemLimit(CTRPluginFramework::MenuEntry*)
070015cc 00000070 T CTRPluginFramework::enhancedParticles(CTRPluginFramework::MenuEntry*)
0700163c 00000018 t __tcf_0
07001654 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070016dc 000000a0 t std::__cxx11::stof(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int*) [clone .isra.0]
0700177c 000000c8 t CTRPluginFramework::InitMenu(CTRPluginFramework::PluginMenu&)::{lambda(CTRPluginFramework::MenuEntry*)#1}::_FUN(CTRPluginFramework::MenuEntry*)
07001844 000000c8 t CTRPluginFramework::InitMenu(CTRPluginFramework::PluginMenu&)::{lambda(CTRPluginFramework::MenuEntry*)#2}::_FUN(CTRPluginFramework::MenuEntry*)
0700190c 000000c8 t CTRPluginFramework::InitMenu(CTRPluginFramework::PluginMenu&)::{lambda(CTRPluginFramework::MenuEntry*)#3}::_FUN(CTRPluginFramework::MenuEntry*)
070019d4 000000c8 t CTRPluginFramework::InitMenu(CTRPluginFramework::PluginMenu&)::{lambda(CTRPluginFramework::MenuEntry*)#4}::_FUN(CTRPluginFramework::MenuEntry*)
07001a9c 0000037c T CTRPluginFramework::InitMenu(CTRPluginFramework::PluginMenu&)
07001e18 000000d0 T CTRPluginFramework::main()
07001ee8 000000d8 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07001fc0 000001c0 t CTRPluginFramework::ToggleTouchscreenForceOn()
07002180 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07002184 T svcCustomBackdoor
0700218c T svcConvertVAToPA
07002194 T svcFlushDataCacheRange
0700219c T svcInvalidateEntireInstructionCache
070021a4 T svcMapProcessMemoryEx
070021c4 T svcUnmapProcessMemoryEx
070021cc T svcControlProcess
070021d4 0000024c t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
07002420 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700247c 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
07002490 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
070024b8 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
070024d4 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
070024fc 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned int)
07002524 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
070025d0 000000f8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
070026c8 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07002758 0000026c T CTRPluginFramework::Screenshot::UpdateFileCount()
070029c4 00000048 T CTRPluginFramework::Screenshot::Initialize()
07002a0c 00000380 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
07002d8c 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07002e1c 00000314 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07003130 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07003174 000000d4 t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07003248 00000024 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
0700326c 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0700326c 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
070032dc 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
070033dc 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
0700342c 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
0700350c 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
07003568 00000028 T CTRPluginFramework::ScreenImpl::Release()
07003590 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07003600 00000040 T CTRPluginFramework::ScreenImpl::Flush()
07003640 00000098 T CTRPluginFramework::ScreenImpl::Clear(bool)
070036d8 00000044 T CTRPluginFramework::ScreenImpl::Copy()
0700371c 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
070037e8 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
070037f0 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
07003850 00000048 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
07003898 0000003c T CTRPluginFramework::ScreenImpl::Clean()
070038d4 0000008c T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
07003960 00000070 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
070039d0 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
07003a00 00000060 T CTRPluginFramework::ScreenImpl::SwapBuffer()
07003a60 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
07003a74 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
07003a90 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
07003aac 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
07003ab4 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
07003abc 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
07003ac4 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
07003ae0 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
07003afc 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
07003b50 0000002c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
07003b7c 00000054 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
07003bd0 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07003c2c 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07003cb0 00000180 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07003e30 000001f4 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07004024 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
070040c4 000001ec T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
070042b0 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
070042e0 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0700432c 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
070045f4 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
070046b8 0000006c W CTRPluginFramework::Rect<int>::Contains(int, int) const
07004724 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
07004870 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
07004890 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
070048b0 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
070048dc 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07004910 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07004938 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
07004960 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
07004980 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
070049b0 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
070049f8 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
07004a3c 00000140 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
07004b7c 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
07004ba8 00000040 t __tls_init
07004ba8 00000040 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
07004be8 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
07004c34 0000009c T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07004cd0 00000094 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07004d64 000000b0 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
07004e14 000000bc T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
07004ed0 000000b8 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
07004f88 0000008c T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
07005014 00000064 t CTRPluginFramework::GetBuffer(unsigned long)
07005078 000000ac t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
07005124 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
07005154 00000138 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
0700528c 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
070052f0 00000124 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070052f0 00000124 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07005414 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
070054f4 000000d0 T CTRPluginFramework::InstallOSD()
070055c4 000000ac T CTRPluginFramework::OSDImpl::_Initialize()
07005670 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
07005670 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
0700572c 000000b0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
070057dc 000001a4 T CTRPluginFramework::OSDImpl::Update()
07005980 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
070059d8 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
07005aa0 000005cc T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)
0700606c 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
070060f8 00000094 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0700618c 00000098 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07006224 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07006224 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07006228 00000014 T CTRPluginFramework::FloatingButton::Draw()
0700623c 00000014 T CTRPluginFramework::FloatingButton::operator()()
07006250 00000018 T CTRPluginFramework::FloatingButton::~FloatingButton()
07006268 00000178 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
070063e0 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070063e0 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07006420 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07006448 00000038 W CTRPluginFramework::File::~File()
07006448 00000038 W CTRPluginFramework::File::~File()
07006480 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
070064a4 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
070064c8 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
070064c8 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07006500 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07006508 00000008 T CTRPluginFramework::BMPImage::Width() const
07006510 00000008 T CTRPluginFramework::BMPImage::Height() const
07006518 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
07006520 00000010 T CTRPluginFramework::BMPImage::data() const
07006530 0000001c T CTRPluginFramework::BMPImage::end() const
0700654c 00000028 W CTRPluginFramework::BMPImage::DataClear()
07006574 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07006574 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07006600 00000034 T CTRPluginFramework::BMPImage::Unload()
07006634 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
0700667c 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
070066ac 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0700677c 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
070067e8 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
070067e8 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700683c 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07006860 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
0700697c 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
0700697c 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
070069f0 000001dc T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07006bcc 00000140 T CTRPluginFramework::BMPImage::OptimiseForRendering()
07006d0c 000000d4 T CTRPluginFramework::BMPImage::Draw(int, int)
07006de0 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07006de8 000000fc T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07006ee4 00000318 T CTRPluginFramework::BMPImage::_LoadBitmap()
070071fc 000000a8 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070071fc 000000a8 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070072a4 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07007300 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
0700732c 00000108 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
07007434 000000f4 T CTRPluginFramework::Preferences::LoadBackgrounds()
07007528 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
07007588 00000004 T CTRPluginFramework::Preferences::Initialize()
0700758c 00000214 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
070077a0 000000c0 T CTRPluginFramework::Preferences::LoadSettings()
07007860 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
070078bc 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
07007978 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
07007a34 00000158 T CTRPluginFramework::Preferences::WriteSettings()
07007b8c 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07007c1c 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07007cc4 0000020c t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
07007ed0 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07007f78 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07007fa4 00000004 W CTRPluginFramework::DefaultRandomBackend::~DefaultRandomBackend()
07007fa4 00000004 W CTRPluginFramework::DefaultRandomBackend::~DefaultRandomBackend()
07007fa8 0000001c W CTRPluginFramework::DefaultRandomBackend::~DefaultRandomBackend()
07007fc4 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07008020 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07008060 00000024 W std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >::_M_dispose()
07008084 0000008c T CTRPluginFramework::Utils::AutoSeedRandom()
07008110 00000018 T CTRPluginFramework::Utils::Random()
07008128 00000024 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0700814c 000000bc T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008208 00000054 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700825c 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
07008294 00000014 W CTRPluginFramework::DefaultRandomBackend::Seed(unsigned long long)
070082a8 00000094 T CTRPluginFramework::Utils::UseRandomBackend(CTRPluginFramework::Utils::RandomBackend*)
0700833c 00000014 T CTRPluginFramework::InitializeRandomEngine()
07008350 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
07008418 0000005c W CTRPluginFramework::DefaultRandomBackend::Random()
07008474 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070084f8 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07008554 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
070085b0 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
070085f4 00000058 T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700864c 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
070086cc 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07008724 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070087a4 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0700881c 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07008850 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008860 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070088bc 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0700890c 000000dc T CTRPluginFramework::Utils::ConvertUTF16ToUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char16_t const*)
070089e8 00000294 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07008c7c 00000104 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07008d80 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07008db4 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07008ef0 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
07008ef0 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
07008f40 00000704 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07009644 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700964c 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07009690 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070096ec 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070096ec 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700974c 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070097ac 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
07009808 00000024 T CTRPluginFramework::ResetColor[abi:cxx11]()
0700982c 0000010c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07009938 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700994c 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009960 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07009960 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0700998c 00000018 T CTRPluginFramework::LineReader::~LineReader()
0700998c 00000018 T CTRPluginFramework::LineReader::~LineReader()
070099a4 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07009a00 000000fc T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07009afc 00000028 T CTRPluginFramework::Touch::IsDown()
07009b24 00000028 T CTRPluginFramework::Touch::GetPosition()
07009b4c 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07009b4c 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07009b50 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
07009b54 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
07009b84 00000018 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07009b9c 00000008 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
07009ba4 000000ac W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
07009c50 00000034 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
07009c84 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07009c84 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07009d30 00000048 T CTRPluginFramework::Task::Start() const
07009d78 0000004c T CTRPluginFramework::Task::Start(void*) const
07009dc4 00000064 T CTRPluginFramework::Task::Wait() const
07009e28 00000010 T CTRPluginFramework::System::IsNew3DS()
07009e38 00000010 T CTRPluginFramework::System::Reboot()
07009e48 00000010 T CTRPluginFramework::Process::GetHandle()
07009e58 00000010 T CTRPluginFramework::Process::GetTitleID()
07009e68 00000024 T CTRPluginFramework::Process::GetTextSize()
07009e8c 00000008 T CTRPluginFramework::Process::Pause()
07009e94 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07009ea4 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
07009f4c 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
07009f50 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
07009f9c 0000001c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
07009fb8 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
07009fd4 00000024 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
07009ff8 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
0700a018 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
0700a038 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0700a058 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
0700a07c 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a0d8 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a110 0000000c T CTRPluginFramework::HookContext::GetCurrent()
0700a11c 00000028 T CTRPluginFramework::HookContext::GetCallCode()
0700a144 00000048 T CTRPluginFramework::Hook::Hook()
0700a144 00000048 T CTRPluginFramework::Hook::Hook()
0700a18c 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
0700a18c 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
0700a1b4 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
0700a1b4 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
0700a1c8 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
0700a22c 00000050 T CTRPluginFramework::Hook::~Hook()
0700a22c 00000050 T CTRPluginFramework::Hook::~Hook()
0700a27c 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
0700a298 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
0700a2c0 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
0700a2d0 0000001c T CTRPluginFramework::Hook::IsEnabled()
0700a2ec 00000120 T CTRPluginFramework::Hook::Enable()
0700a40c 00000030 T CTRPluginFramework::Hook::Disable()
0700a43c 00000008 T CTRPluginFramework::Hook::GetContext() const
0700a444 0000000c T CTRPluginFramework::FwkSettings::Get()
0700a450 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
0700a51c 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700a578 0000001c t std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base() [clone .isra.0]
0700a594 000000bc T CTRPluginFramework::File::Read(void*, unsigned long) const
0700a650 000000f4 T CTRPluginFramework::File::Write(void const*, unsigned long)
0700a744 000000dc T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0700a820 00000008 T CTRPluginFramework::File::Tell() const
0700a828 0000002c T CTRPluginFramework::File::Rewind() const
0700a854 00000030 T CTRPluginFramework::File::Flush() const
0700a884 00000064 T CTRPluginFramework::File::GetSize() const
0700a8e8 00000008 T CTRPluginFramework::File::IsOpen() const
0700a8f0 00000044 T CTRPluginFramework::File::File()
0700a8f0 00000044 T CTRPluginFramework::File::File()
0700a934 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a934 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a99c 0000009c T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700aa38 000000ec T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ab24 0000008c T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700abb0 000000ac T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ac5c 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0700ac70 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
0700ace8 000000a8 T CTRPluginFramework::File::Close() const
0700ad90 000001b0 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0700af40 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700af40 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700af9c 0000009c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0700b038 00000074 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.0]
0700b0ac 0000001c t std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base() [clone .isra.0]
0700b0c8 00000048 T CTRPluginFramework::Directory::Close() const
0700b110 00000008 T CTRPluginFramework::Directory::IsOpen() const
0700b118 00000040 T CTRPluginFramework::Directory::Directory()
0700b118 00000040 T CTRPluginFramework::Directory::Directory()
0700b158 0000009c T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b1f4 000000ac T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b2a0 000000ec T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b38c 000000a0 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b42c 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
0700b440 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0700b4ec 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
0700b4f8 000000dc T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b5d4 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
0700b608 00000180 T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700b788 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700b788 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700b7e0 0000007c T CTRPluginFramework::Directory::~Directory()
0700b7e0 0000007c T CTRPluginFramework::Directory::~Directory()
0700b85c 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0700b8ec 000000d4 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_append<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b9c0 00000038 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b9f8 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
0700b9f8 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
0700ba14 00000110 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700bb24 0000008c t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
0700bbb0 00000060 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700bc10 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700bcc4 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
0700bd08 000001f0 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700bef8 00000280 T CTRPluginFramework::Directory::_List() const
0700c178 000000d4 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700c24c 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700c328 0000003c T CTRPluginFramework::Controller::Update()
0700c364 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
0700c364 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
0700c3d8 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuEntry*) const
0700c3ec 00000004 T CTRPluginFramework::PluginMenu::operator+=(CTRPluginFramework::MenuEntry const*) const
0700c3f0 00000048 T CTRPluginFramework::PluginMenu::Run() const
0700c438 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
0700c440 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
0700c450 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
0700c45c 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
0700c45c 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
0700c48c 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
0700c48c 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
0700c4a4 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700c4a4 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700c4dc 00000020 W CTRPluginFramework::TextBox::~TextBox()
0700c4fc 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700c4fc 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700c544 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700c544 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700c580 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
0700c580 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
0700c5c0 00000008 T CTRPluginFramework::MessageBox::operator()() const
0700c5c8 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c5c8 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c618 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700c618 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700c648 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
0700c650 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700c6ac 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700c770 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c770 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c7b8 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0700c7b8 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0700c824 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
0700c824 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
0700c854 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
0700c85c 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
0700c878 00000044 T CTRPluginFramework::Keyboard::Open() const
0700c8bc 0000009c T CTRPluginFramework::Keyboard::Open(float&) const
0700c958 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
0700c960 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
0700c968 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
0700c970 00000078 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
0700c9e8 0000008c T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700ca74 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0700cb20 000000d4 T CTRPluginFramework::Keyboard::Open(float&, float) const
0700cbf4 000000cc t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) [clone .isra.0]
0700ccc0 00000094 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
0700cd54 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700cde4 000000c8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
0700ceac 00000108 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
0700cfb4 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700d044 000000c8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
0700d10c 00000108 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
0700d214 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700d2a4 000000c8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
0700d36c 00000108 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
0700d474 00000070 t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, int const&, unsigned int) const [clone .isra.0]
0700d4e4 0000005c t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&) [clone .isra.0]
0700d540 000000c0 T CTRPluginFramework::Render::PullRandomCharacter[abi:cxx11](int)
0700d600 0000001c W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
0700d61c 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
0700d654 00000064 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
0700d6b8 000000b0 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_append<CTRPluginFramework::OSDImpl::OSDMessage*>(CTRPluginFramework::OSDImpl::OSDMessage*&&)
0700d768 0000008c T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700d7f4 00000110 T CTRPluginFramework::Color::Fade(float)
0700d904 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
0700d944 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
0700d9c0 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
0700dbe0 000000c8 T OnSharedMemMap(unsigned long, void*, MemPerm, MemPerm)
0700dca8 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
0700dcb0 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0700dd14 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700dd70 00000018 W CTRPluginFramework::ProcessImpl::UserProcessEventCallback(CTRPluginFramework::Process::Event)
0700dd88 0000005c T abort
0700dde4 00000024 T OnLoadCro
0700de08 00000048 T CTRPluginFramework::MainThreadExit()
0700de50 000000e4 T __entrypoint
0700df34 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0700dfb8 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0700e02c 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0700e060 00000710 T CTRPluginFramework::KeepThreadMain(void*)
0700e770 000000b0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0700e820 000001f4 T CTRPluginFramework::Initialize()
0700ea14 00000048 T CTRPluginFramework::MainThreadInit(void*)
0700ea5c 00000048 t _GLOBAL__sub_I_g_gspEventThreadPriority
0700eaa4 0000002c t _GLOBAL__sub_D_g_gspEventThreadPriority
0700ead0 000000c0 t NCSNDCmd_Add
0700eb90 00000084 t NCSNDCmd_Execute.constprop.0
0700ec14 00000068 T ncsndNotifyAptEvent
0700ec7c 00000004 t ncsndAptHook
0700ec80 000001cc T ncsndInit
0700ee4c 000000ac T ncsndExit
0700eef8 00000024 T ncsndInitializeSound
0700ef1c 00000260 T ncsndPlaySound
0700f17c 00000040 T ncsndStopSound
0700f1bc 00000090 T ncsndIsPlaying
0700f24c T LoadCROHooked
0700f260 T AR__ExecuteRoutine
0700f288 t stackBak
0700f290 0000003c T __syscall_getreent
0700f2cc 0000000c T __aeabi_read_tp
0700f2d8 0000003c T __getThreadLocalStorage
0700f314 00000070 T __syscall_gettod_r
0700f384 00000004 T __syscall_lock_acquire
0700f388 00000004 T __syscall_lock_release
0700f38c 00000004 T __syscall_lock_acquire_recursive
0700f390 00000004 T __syscall_lock_release_recursive
0700f394 00000054 T initThreadVars
0700f3e8 0000005c T __system_initSyscalls
0700f444 00000020 T __libctru_exit
0700f464 0000001c T __appExit
0700f480 00000190 T __createThread
0700f610 00000110 T __startThread
0700f720 00000024 T threadGetHandle
0700f744 0000002c T threadFree
0700f770 00000024 T threadJoin
0700f794 00000020 T threadGetCurrent
0700f7b4 0000003c T threadExit
0700f7f0 00000020 t _thread_begin
0700f810 0000004c T hidInitFake
0700f85c 0000003c T hidExitFake
0700f898 0000002c T hidSetSharedMem
0700f8c4 00000070 T plgLdrExit
0700f934 000000d4 T plgLdrInit
0700fa08 00000068 T PLGLDR__DisplayErrMessage
0700fa70 00000050 T PLGLDR__GetPluginPath
0700fac0 00000024 T PLGLDR__FetchEvent
0700fae4 000000ec T PLGLDR__Reply
0700fbd0 000000b4 T __system_allocateHeaps
0700fc84 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
0700fcb0 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
0700fcd8 00000148 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
0700fe20 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
0700fea0 00000028 t CTRPluginFrameworkImpl::Services::GSP::plgVAtoGameVa(unsigned long*)
0700fec8 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
0700fef0 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0700ff54 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
07010024 00000004 T __gsp__Update
07010028 00000284 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
070102ac 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
070102c4 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
070102e4 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
0701032c 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
07010360 00000020 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
07010380 00000020 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
070103a0 00000034 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
070103d4 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
07010400 00000090 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
07010490 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
070104c4 000000a8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
0701056c 0000016c T CTRPluginFrameworkImpl::Services::GSP::Initialize()
070106d8 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07010714 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07010734 000000ac T CTRPluginFramework::SystemImpl::Initialize()
070107e0 00000050 T CTRPluginFramework::SystemImpl::CheckCitra()
07010830 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
07010848 0000001c T CTRPluginFramework::SystemImpl::IsSleeping()
07010864 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
070108a0 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
070108c0 00000044 T CTRPluginFramework::SystemImpl::Status()
07010904 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
07010914 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07010914 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07010974 000000a0 T CTRPluginFramework::Scheduler::Initialize()
07010a14 0000004c T CTRPluginFramework::Scheduler::Exit()
07010a60 00000044 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
07010aa4 00000040 t std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [clone .isra.0]
07010ae4 000001d0 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
07010cb4 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
07010db8 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
07010e10 000000e8 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_append<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(std::shared_ptr<CTRPluginFramework::TaskContext> const&)
07010ef8 00000174 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0701106c 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
070110b0 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
07011138 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
07011184 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
07011218 0000003c T CTRPluginFramework::ProcessImpl::LockGameThreads()
07011254 00000038 T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0701128c 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
070112f0 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
07011360 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
070113f4 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0701149c 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
070114d4 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
070114f0 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
07011508 t _store_reg_loop
07011528 0000000c T CTRPluginFramework::ProcessImpl::SignalExit()
07011534 000000b8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_append<MemInfo const&>(MemInfo const&)
070115ec 000000e4 T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
070116d0 00000428 T CTRPluginFramework::ProcessImpl::Initialize()
07011af8 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
07011b64 000000e0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
07011c44 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07011c50 00000064 t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07011cb4 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07011cc0 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07011cd8 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07011d18 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
07011d5c 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
07011d6c 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07011d80 00000004 T Kernel::Initialize()
07011d84 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
07011d9c 0000000c T KProcess::GetCurrent()
07011da8 00000024 T KProcess::PatchCore2Access()
07011dcc 0000002c T KProcess::PatchCategory(unsigned long)
07011df8 00000014 T KProcess__PatchCategory
07011e0c 0000002c T KProcess::PatchMaxPriority(unsigned long)
07011e38 00000014 T KProcess__PatchMaxPriority
07011e4c 00000028 T KProcess::PatchMaxThreads()
07011e74 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
07011e94 00000014 t decltype (::new ((void*)(0)) CTRPluginFramework::AsmWrapper()) std::construct_at<CTRPluginFramework::AsmWrapper>(CTRPluginFramework::AsmWrapper*) [clone .isra.0]
07011ea8 00000084 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07011f2c 00000240 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
0701216c 00000044 W CTRPluginFramework::Lock::~Lock()
0701216c 00000044 W CTRPluginFramework::Lock::~Lock()
070121b0 000000d4 T CTRPluginFramework::HookManager::HookManager()
070121b0 000000d4 T CTRPluginFramework::HookManager::HookManager()
07012288 000000d0 T __hook__CheckTlsValue
07012358 00000064 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
070123bc 00000054 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
07012410 000000d0 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
070124e0 0000000c T CTRPluginFramework::HookManager::Lock()
070124ec 0000000c T CTRPluginFramework::HookManager::Unlock()
070124f8 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
07012560 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
070125d8 000000dc W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_append<>()
070126b4 00000070 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
07012724 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
07012880 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
0701288c 00000044 t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
070128d0 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
070128f4 00000004 t addrMapNodeDestructor(rbtree_node*)
070128f8 00000134 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
07012a2c 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
07012a34 0000006c T CTRPluginFramework::Heap::Free(void*)
07012aa0 0000000c T CTRPluginFramework::Heap::SpaceFree()
07012aac 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07012ab8 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07012ad8 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07012b34 000002bc T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07012df0 0000003c W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short, unsigned short>(unsigned short*, unsigned short*, unsigned short*)
07012e2c 000001d8 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
07013004 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07013004 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070130c8 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
070130d4 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
07013108 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
07013108 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
070131a8 00000050 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
070131f8 00000030 T CTRPluginFramework::EventManager::Clear()
07013228 000001e0 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
07013408 00000070 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
07013478 000002ec T CTRPluginFramework::EventManager::ProcessEvents()
07013768 000000c4 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0701382c 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
07013834 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07013890 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
07013898 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
0701389c 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
070138a0 00000048 T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
070138e8 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0701390c 00000044 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
07013950 0000012c W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
07013a7c 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07013b0c 00000200 T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
07013d0c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
07013d18 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
07013d68 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07013d68 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07013dac 0000001c T CTRPluginFramework::SubMenu::operator()()
07013dc8 000001f8 T CTRPluginFramework::SubMenu::Draw()
07013fc0 000000d4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07014094 00000008 T CTRPluginFramework::SubMenu::IsOpen()
0701409c 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
070140b8 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
070140f0 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070140f0 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07014174 000001ac T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07014320 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
0701434c 0000001c t std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base() [clone .isra.0]
07014368 0000001c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base() [clone .isra.0]
07014384 00000028 W CTRPluginFramework::Mutex::~Mutex()
07014384 00000028 W CTRPluginFramework::Mutex::~Mutex()
070143ac 00000104 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
070143ac 00000104 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
070144b0 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
070144b8 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
070144d8 00000190 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07014668 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07014688 00000048 T CTRPluginFramework::PluginMenuImpl::ForceExit()
070146d0 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
070146ec 00000010 T CTRPluginFramework::PluginMenuImpl::GetRunningInstance()
070146fc 00000008 T CTRPluginFramework::PluginMenuImpl::GetHexEditorState() const
07014704 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0701470c 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07014714 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07014714 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07014758 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
07014890 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
070148cc 00000808 T CTRPluginFramework::PluginMenuImpl::Run()
070150d4 00000050 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
07015124 000000a0 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
070151c4 00000110 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
070152d4 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
070152d4 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07015348 00000118 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_append<CTRPluginFramework::Preferences::HotkeysInfos const&>(CTRPluginFramework::Preferences::HotkeysInfos const&)
07015460 0000013c T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0701559c 000001a4 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07015740 0000002c W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
0701576c 000000b0 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0701581c 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
07015858 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0701598c 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07015acc 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07015ad8 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07015aec 000001b4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07015aec 000001b4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07015ca0 000001d4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07015ca0 000001d4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07015e74 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
07015ecc 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07015f8c 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07016078 000000bc t __tcf_1
07016134 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07016140 0000031c T CTRPluginFramework::PluginMenuHome::_RenderTop()
0701645c 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07016590 000004b0 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07016a40 00000110 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07016b50 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07016be0 00000038 T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
07016c18 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07016c44 000000ec T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07016d30 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
07016db4 00000080 T CTRPluginFramework::PluginMenuHome::Init()
07016e34 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07016e90 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
07016f50 000004b0 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07016f50 000004b0 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07017400 0000012c T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0701752c 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0701757c 00000088 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07017604 000003ac T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
070179b0 00000248 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07017bf8 00000064 t std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07017c5c 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07017cc0 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07017cc0 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07017cfc 0000024c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07017f48 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07018080 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
070181fc 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
07018254 00000184 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
070183d8 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
070183f0 000000b0 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_append<CTRPluginFramework::MenuEntryImpl* const&>(CTRPluginFramework::MenuEntryImpl* const&)
070184a0 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07018660 000000b0 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_append<CTRPluginFramework::MenuEntryActionReplay* const&>(CTRPluginFramework::MenuEntryActionReplay* const&)
07018710 00000084 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07018794 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
070187a8 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
070187cc 00000038 t std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned int, void const*) [clone .isra.0]
07018804 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07018844 00000050 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07018894 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
070188b8 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
070188e0 00000030 W CTRPluginFramework::ARCode::~ARCode()
070188e0 00000030 W CTRPluginFramework::ARCode::~ARCode()
07018910 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07018944 00000014 t __tcf_1
07018958 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070189c8 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07018ae8 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
07018bcc 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07018c28 00000234 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07018e5c 0000011c t CTRPluginFramework::ProcessPathString(unsigned char*)
07018f78 00000258 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07018f78 00000258 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070191d0 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07019348 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07019514 000000e4 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_append<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
070195f8 00000038 t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
07019630 0000014c T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0701977c 0000003c W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long const, unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
070197b8 00000104 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
070198bc 0000026c T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
07019b28 000000d0 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07019bf8 000001c0 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
07019db8 000001a4 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
07019f5c 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
07019f6c 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
07019f7c 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
07019f8c 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
07019f94 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
07019f94 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
07019fc4 00000020 W CTRPluginFramework::MenuItem::~MenuItem()
07019fe4 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07019fe4 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701a0c8 00000020 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701a0e8 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0701a0f8 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0701a148 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
0701a160 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0701a184 000000b0 T CTRPluginFramework::MenuFolderImpl::Clear()
0701a234 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
0701a244 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
0701a264 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701a264 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701a338 000000b0 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_append<CTRPluginFramework::MenuItem* const&>(CTRPluginFramework::MenuItem* const&)
0701a3e8 00000054 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0701a43c 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701a450 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701a4ac 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701a4ac 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701a4d4 00000020 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701a4f4 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701a4fc 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701a510 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701a51c 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701a524 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701a548 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701a578 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701a594 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701a5fc 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701a5fc 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701a6e8 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701a6e8 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701a7d8 000002a0 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701aa78 00000018 W CTRPluginFramework::Clock::Clock()
0701aa78 00000018 W CTRPluginFramework::Clock::Clock()
0701aa90 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0701aacc 00000058 T CTRPluginFramework::Menu::CloseAll()
0701ab24 00000030 T CTRPluginFramework::Menu::~Menu()
0701ab24 00000030 T CTRPluginFramework::Menu::~Menu()
0701ab54 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0701ab60 00000008 T CTRPluginFramework::Menu::GetFolder() const
0701ab68 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0701ab70 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
0701abb0 000003a8 T CTRPluginFramework::Menu::Draw() const
0701af58 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
0701afe4 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
0701b070 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0701b2b4 00000170 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0701b424 00000068 T CTRPluginFramework::Menu::ShowNote()
0701b48c 00000008 T CTRPluginFramework::Menu::CloseNote()
0701b494 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0701b49c 000000e0 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701b49c 000000e0 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701b57c 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701b57c 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701b6a8 00000054 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0701b6fc 00000044 T CTRPluginFramework::Menu::Pop()
0701b740 000000d4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0701b814 000000b4 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0701b8c8 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0701b8f0 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.0]
0701b928 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
0701b968 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701b9c4 0000001c t std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [clone .isra.0]
0701b9e0 0000008c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701b9e0 0000008c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701ba6c 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701ba74 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
0701ba7c 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701ba84 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
0701ba8c 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701ba94 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
0701ba9c 0000005c T CTRPluginFramework::KeyboardImpl::Clear()
0701baf8 000001cc T CTRPluginFramework::KeyboardImpl::_RenderTop()
0701bcc4 000004e8 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0701c1ac 000001c4 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
0701c370 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701c3b0 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0701c418 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0701c4a8 00000078 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0701c520 0000007c T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0701c59c 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0701c6f8 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0701c758 00000090 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0701c7e8 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
0701c890 00000560 T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
0701cdf0 0000009c T CTRPluginFramework::KeyboardImpl::_GetEffectiveKeyRange()
0701ce8c 000000f0 T CTRPluginFramework::KeyboardImpl::_Update(float)
0701cf7c 00000058 T CTRPluginFramework::KeyboardImpl::_Select(CTRPluginFramework::TouchKey*)
0701cfd4 000003b8 T CTRPluginFramework::KeyboardImpl::_CalcSelect(CTRPluginFramework::SelectMode, unsigned short, unsigned short)
0701d38c 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0701d394 00000138 W __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::find<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
0701d4cc 00000060 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
0701d52c 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0701d58c 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701d5e0 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [3]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701d634 00000058 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)(), (declval<CTRPluginFramework::Keyboard::SpecialCodePoints::{unnamed type#1}>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, CTRPluginFramework::Keyboard::SpecialCodePoints::{unnamed type#1}>(void**, (CTRPluginFramework::TouchKey&&)...) [clone .isra.0]
0701d68c 000000b4 W void std::vector<float, std::allocator<float> >::_M_realloc_append<float const&>(float const&)
0701d740 000000b0 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_append<CTRPluginFramework::TouchKeyString* const&>(CTRPluginFramework::TouchKeyString* const&)
0701d7f0 00000028 W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
0701d818 00000324 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
0701db3c 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0701dba0 0000015c T CTRPluginFramework::KeyboardImpl::_Backspace()
0701dcfc 000000f4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0701ddf0 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0701de24 000001f8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701de24 000001f8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701e01c 000001f8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701e01c 000001f8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701e214 00000054 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0701e268 00000598 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0701e800 0000007c T CTRPluginFramework::KeyboardImpl::operator()(int&)
0701e87c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0701e8a8 00000100 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<CTRPluginFramework::Keyboard::SpecialCodePoints::{unnamed type#1}, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::Keyboard::SpecialCodePoints::{unnamed type#1}&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701e9a8 000000f4 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701ea9c 000000c0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, CTRPluginFramework::Keyboard::SpecialCodePoints::{unnamed type#1}>(char const (&) [4], CTRPluginFramework::Rect<int>&, CTRPluginFramework::Keyboard::SpecialCodePoints::{unnamed type#1}&&) [clone .isra.0]
0701eb5c 00000580 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0701f0dc 00000580 T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0701f65c 000000b8 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701f714 000008b8 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
0701ffcc 000000b8 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07020084 00000a60 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
07020ae4 00000060 T CTRPluginFramework::KeyboardImpl::_Qwerty()
07020b44 000000f4 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
07020c38 0000017c T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
07020db4 0000008c T CTRPluginFramework::KeyboardImpl::_Decimal()
07020e40 00000078 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07020eb8 00000050 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout, bool)
07020f08 000005b8 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
070214c0 000003c4 T CTRPluginFramework::KeyboardImpl::Run()
07021884 00000030 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07021884 00000030 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
070218b4 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
070218c8 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
070218f4 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070218f4 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070218f8 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070218f8 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070218fc 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070218fc 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07021900 00000018 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07021918 00000018 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07021930 00000018 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07021948 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
07021ae4 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07021c20 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
07021d14 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07021d54 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
07021d54 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
07021ea0 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
07021ebc 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07021f30 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
07021f5c 00000044 T CTRPluginFramework::HexEditor::_MoveForward()
07021fa0 00000010 T CTRPluginFramework::HexEditor::Refresh()
07021fb0 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
07021ff4 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
0702202c 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
07022058 0000007c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
070220d4 00000090 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
07022164 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
07022230 000000c0 T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
070222f0 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
070223a0 0000019c T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0702253c 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0702254c 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0702255c 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0702256c 00000070 T CTRPluginFramework::HexEditor::_RenderBottom()
070225dc 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
0702261c 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
07022688 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0702275c 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
070227b4 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07022828 000001e0 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07022828 000001e0 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07022a08 00000164 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
07022b6c 000000e8 T CTRPluginFramework::HexEditor::_JumpTo(int)
07022c54 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
07022d0c 00000250 T CTRPluginFramework::HexEditor::_BrowseHistory()
07022f5c 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
070231bc 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0702324c 000002ac T CTRPluginFramework::HexEditor::ByteView::UpdateView()
070234f8 00000268 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
07023760 000001d4 T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
07023934 00000060 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
07023994 00000188 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
07023b1c 000001c0 T CTRPluginFramework::HexEditor::_Update()
07023cdc 000001e8 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07023ec4 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07023f20 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07023f60 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
07023f94 0000033c t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070242d0 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
070242d0 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
070244b8 000000d4 T CTRPluginFramework::GuideReader::_LoadBMP()
0702458c 000003e0 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0702496c 0000015c T CTRPluginFramework::GuideReader::Draw()
07024ac8 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07024b3c 000000e4 T CTRPluginFramework::Converter::Converter()
07024b3c 000000e4 T CTRPluginFramework::Converter::Converter()
07024c20 00000010 T CTRPluginFramework::Converter::Instance()
07024c30 00000110 T CTRPluginFramework::Converter::_Draw()
07024d40 00000224 T CTRPluginFramework::Converter::operator()(unsigned long)
07024f64 00000218 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0702517c 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
070251a8 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
070251e4 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
07025220 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0702525c 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
07025298 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
070252d4 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
07025300 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0702533c 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
07025378 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
070253b4 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
070253f0 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0702541c 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
07025458 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
07025484 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
070254b0 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
070254dc 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
07025518 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
07025544 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07025580 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
070255ac 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
070255e0 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0702561c 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
07025648 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
07025684 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
070256b0 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
070256dc 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
07025708 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
07025734 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
07025760 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0702578c 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
070257b8 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
070257e4 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07025820 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
0702584c 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
07025868 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
0702589c 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0702589c 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07025958 00000028 T CTRPluginFramework::Window::~Window()
07025958 00000028 T CTRPluginFramework::Window::~Window()
07025980 00000064 T CTRPluginFramework::Window::Draw() const
070259e4 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07025ac0 00000018 T CTRPluginFramework::Window::DrawButton() const
07025ad8 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
07025af0 00000018 T CTRPluginFramework::Window::MustClose() const
07025b08 00000028 T CTRPluginFramework::Window::Close() const
07025b30 00000004 T CTRPluginFramework::Window::GetRect() const
07025b34 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
07025b68 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
07025be8 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
07025c08 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07025c08 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07025c1c 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
07025c1c 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
07025c44 00000024 T CTRPluginFramework::UIContainer::Draw()
07025c68 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07025c9c 000000b0 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_append<CTRPluginFramework::Drawable* const&>(CTRPluginFramework::Drawable* const&)
07025d4c 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07025d80 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07025d80 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07025df4 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
07025dfc 00000034 T CTRPluginFramework::TouchKeyString::CanUse()
07025e30 000000cc T CTRPluginFramework::TouchKeyString::Draw()
07025efc 000000e8 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07025fe4 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07025ffc 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
07026010 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
07026028 00000048 T CTRPluginFramework::TouchKeyString::operator()()
07026070 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
07026078 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07026078 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07026124 00000008 W CTRPluginFramework::Drawable::operator()()
0702612c 00000148 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07026274 00000090 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07026274 00000090 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07026304 000000c4 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07026304 000000c4 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
070263c8 00000098 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
070263c8 00000098 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07026460 0000004c T CTRPluginFramework::TouchKey::Clear()
070264ac 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070264ac 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070264cc 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070264ec 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
070264f4 00000008 T CTRPluginFramework::TouchKey::Select(bool)
070264fc 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
0702656c 00000094 T CTRPluginFramework::TouchKey::Draw()
07026600 00000048 T CTRPluginFramework::TouchKey::GetCodePoint()
07026648 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07026650 000000bc T CTRPluginFramework::TouchKey::GetSidePosition(CTRPluginFramework::TouchKey::Side) const
0702670c 000000b0 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_append<CTRPluginFramework::Glyph* const&>(CTRPluginFramework::Glyph* const&)
070267bc 000000e4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070267bc 000000e4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070268a0 000000e0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
070268a0 000000e0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07026980 00000184 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07026b04 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07026b08 000002fc T CTRPluginFramework::TextBox::Draw()
07026e04 00000094 T CTRPluginFramework::TextBox::TextBox()
07026e04 00000094 T CTRPluginFramework::TextBox::TextBox()
07026e98 0000000c T CTRPluginFramework::TextBox::Open() const
07026ea4 0000000c T CTRPluginFramework::TextBox::Close() const
07026eb0 00000008 T CTRPluginFramework::TextBox::IsOpen() const
07026eb8 0000023c T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
070270f4 0000000c T CTRPluginFramework::TextBox::DrawConst() const
07027100 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
07027194 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
07027248 00000050 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
07027298 00000088 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_append<unsigned char* const&>(unsigned char* const&)
07027320 00000028 W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07027348 0000021c T CTRPluginFramework::TextBox::_GetTextInfos()
07027564 00000188 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07027564 00000188 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
070276ec 0000018c T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07027878 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
070279a4 00000110 T CTRPluginFramework::Renderer::GetTextSize(char const*)
07027ab4 000001a0 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
07027c54 000001bc T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
07027e10 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
07027e74 00000224 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
07028098 000005ac T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
07028644 00000480 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
07028ac4 00000074 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
07028b38 00000070 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
07028ba8 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
07028d14 00000020 t __tcf_1
07028d34 000001e8 t CTRPluginFramework::Vector<int>& std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&) [clone .isra.0]
07028f1c 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
070290c0 00000114 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
070291d4 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07029268 000000a4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0702930c 000002b4 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070295c0 000000c4 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_append<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
07029684 00000034 t CTRPluginFramework::Line<int>& std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&) [clone .isra.0]
070296b8 000007bc T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07029e74 00000198 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702a010 0000004c t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(void*)
0702a05c 0000000c T CTRPluginFramework::OSDImpl::Lock()
0702a068 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0702a084 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0702a090 000000e8 T CTRPluginFramework::OSDImpl::PauseFrame()
0702a178 00000194 T CTRPluginFramework::OSDImpl::WaitFramePaused()
0702a30c 000000b4 T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
0702a3c0 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
0702a3f0 000000dc t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
0702a4cc 0000007c T CTRPluginFramework::NumericTextBox::Draw()
0702a548 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0702a548 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0702a568 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0702a588 0000007c W CTRPluginFramework::Rect<int>::Contains(CTRPluginFramework::Vector<int> const&) const
0702a604 00000078 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0702a67c 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702a714 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
0702a74c 00000060 T CTRPluginFramework::NumericTextBox::_UpdateVal()
0702a7ac 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
0702a7bc 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
0702a7c4 0000000c T CTRPluginFramework::NumericTextBox::Clear()
0702a7d0 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
0702a7d0 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
0702a838 000000f4 T CTRPluginFramework::NumericTextBox::operator()()
0702a92c 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
0702a93c 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
0702aa00 00000174 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702aa00 00000174 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702ab74 00000154 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702ab74 00000154 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702acc8 000002a8 T CTRPluginFramework::MessageBoxImpl::_Draw()
0702af70 000001f4 T CTRPluginFramework::MessageBoxImpl::operator()()
0702b164 00000024 t fontGetSystemFont
0702b188 00000010 T CTRPluginFramework::Glyph::Width() const
0702b198 000004dc T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0702b674 00000350 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0702b9c4 000000ac T CTRPluginFramework::Font::Initialize()
0702ba70 0000001c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
0702ba8c 0000018c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
0702bc18 000000c8 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
0702bce0 0000012c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0702be0c 00000088 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0702be94 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0702beb4 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0702befc 00000078 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
0702bf74 00000094 T CTRPluginFramework::ComboBox::Draw()
0702c008 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
0702c008 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
0702c05c 00000020 W CTRPluginFramework::ComboBox::~ComboBox()
0702c07c 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0702c07c 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0702c0c8 0000003c T CTRPluginFramework::ComboBox::Clear()
0702c104 00000088 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0702c18c 000000a8 T CTRPluginFramework::ComboBox::operator()()
0702c234 00000048 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702c27c 0000015c T CTRPluginFramework::Button::Draw()
0702c3d8 00000070 T CTRPluginFramework::Button::operator()()
0702c448 00000184 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
0702c5cc 00000038 T CTRPluginFramework::Button::~Button()
0702c5cc 00000038 T CTRPluginFramework::Button::~Button()
0702c604 00000020 T CTRPluginFramework::Button::~Button()
0702c624 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702c624 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702c7b8 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702c7b8 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702c7d8 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702c7d8 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702c870 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702c870 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702c884 00000018 T CTRPluginFramework::Button::Enable(bool)
0702c89c 00000010 T CTRPluginFramework::Button::Enable()
0702c8ac 00000010 T CTRPluginFramework::Button::Disable()
0702c8bc 00000010 T CTRPluginFramework::Button::Lock()
0702c8cc 00000010 T CTRPluginFramework::Button::Execute()
0702c8dc 00000018 T CTRPluginFramework::Button::SetState(bool)
0702c8f4 00000010 T CTRPluginFramework::Button::GetState() const
0702c904 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
0702c90c 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
0702c944 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
0702c9ec 00000120 T ARM_Disasm::Decode01(unsigned long)
0702cb0c 00000028 T ARM_Disasm::Decode10(unsigned long)
0702cb34 00000078 T ARM_Disasm::Decode11(unsigned long)
0702cbac 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
0702cc00 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
0702cc50 000000e4 T ARM_Disasm::DecodeALU(unsigned long)
0702cd34 000000c4 T ARM_Disasm::Decode00(unsigned long)
0702cdf8 00000030 T ARM_Disasm::Decode(unsigned long)
0702ce28 000000d0 W void std::vector<RegBlock, std::allocator<RegBlock> >::_M_realloc_append<int&, int&>(int&, int&)
0702cef8 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0702cf68 00000350 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
0702d2b8 00000078 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
0702d330 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
0702d3a0 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
0702d420 00000448 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0702d868 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0702da88 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
0702db2c 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
0702dbec 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
0702dcac 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
0702dd5c 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
0702ddec 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
0702df64 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0702e078 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0702e0dc 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0702e170 000003ac T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
0702e51c 000001b0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0702e6cc 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0702e71c 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702e71c 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702e794 00000020 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702e7b4 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e7b4 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e800 00000068 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0702e868 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702e900 00000130 T CTRPluginFramework::MenuEntryActionReplay::Update()
0702ea30 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0702ea54 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0702ea78 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0702ea9c 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0702eac4 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0702eaec 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0702eb14 000000c0 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_append<CTRPluginFramework::Hook const&>(CTRPluginFramework::Hook const&)
0702ebd4 00000050 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0702ec24 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0702ec4c 00001e38 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07030a84 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
07030b34 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
07030b54 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
07030bc8 00000148 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030d10 0000035c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0703106c 00000020 t __tcf_1
0703108c 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
070310b4 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
070310cc 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0703111c 00000050 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703116c 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070311b4 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07031260 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07031260 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
070312b0 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
070312d0 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
07031310 000000fc W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_append<CTRPluginFramework::ARCode const&>(CTRPluginFramework::ARCode const&)
0703140c 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07031474 000000f4 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07031568 00000104 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0703166c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0703167c 00000118 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07031794 00000038 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
070317cc 000004dc T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07031ca8 00000154 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
07031dfc 000008ac T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
070326a8 000000ac t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07032754 0000013c t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07032890 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070328ec 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07032914 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032914 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07032914 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032914 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07032960 00000044 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070329a4 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
070329a4 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
070329c4 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07032a24 00000040 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07032a64 0000012c T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07032a64 0000012c T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07032b90 000002b4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07032e44 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07032ea0 00000064 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07032f04 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
07032f54 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07033000 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07033000 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07033078 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
070330ac 0000003c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070330e8 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0703311c 000011c0 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
070342dc 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
07034368 00000060 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
070343c8 000000f0 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_append<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
070344b8 00000034 t CTRPluginFramework::ARCodeEditor::CodeLine& std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&) [clone .isra.0]
070344ec 00000038 t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
07034524 00000244 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07034768 00000030 t __tcf_1
07034798 000001a8 t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
07034940 0000016c W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07034aac 0000046c T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07034f18 000006a0 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
070355b8 000003c4 T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0703597c 000001e4 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07035b60 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07035bbc 00000090 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07035c4c 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07035c88 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07035c88 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07035cac 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
07035cd4 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07035cd4 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07035d08 000000b0 T CTRPluginFramework::ARCodeContext::Clear()
07035db8 0000010c T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07035db8 0000010c T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07035ec4 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07035ec4 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07035fe8 000000f0 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070360d8 00000084 T CTRPluginFramework::ARCode::Update()
0703615c 0000003c T CTRPluginFramework::ARCodeContext::Update()
07036198 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
070361f4 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
07036214 00000024 t __tcf_0
07036238 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07036238 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07036260 0000004c T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
070362ac 00000048 T CTRPluginFramework::LineWriter::Flush()
070362f4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
070362f4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07036310 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036374 00000018 T CTRPluginFramework::LineWriter::Close()
0703638c 00000020 T CTRPluginFramework::Time::AsSeconds() const
070363ac 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
070363d4 00000090 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_get_insert_unique_pos(unsigned long const&) [clone .isra.0]
07036464 00000030 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
07036494 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07036494 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
070364c8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
070364c8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
070364e8 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
0703653c 00000040 T CTRPluginFramework::ThreadEx::JoinTimeout(bool, unsigned long long)
0703657c 0000000c T CTRPluginFramework::ThreadEx::Exit(int)
07036588 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
07036590 00000170 W std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> > std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_hint_unique<std::pair<unsigned long, ThreadVars*> >(std::_Rb_tree_const_iterator<std::pair<unsigned long const, ThreadVars*> >, std::pair<unsigned long, ThreadVars*>&&)
07036700 00000220 T __ctrpf_getThreadVars
07036920 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
07036958 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
07036990 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
070369d0 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
070369d4 0000000c T CTRPluginFramework::Sound::Sound()
070369d4 0000000c T CTRPluginFramework::Sound::Sound()
070369e0 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
070369e0 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
070369f4 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
070369f4 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07036a28 00000090 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
07036ab8 00000070 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
07036b28 00000058 T CTRPluginFramework::Sound::~Sound()
07036b28 00000058 T CTRPluginFramework::Sound::~Sound()
07036b80 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
07036b98 00000040 T CTRPluginFramework::Sound::Play(int, int)
07036bd8 00000008 T CTRPluginFramework::Sound::Play(int)
07036be0 00000008 T CTRPluginFramework::Sound::Play()
07036be8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07036be8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07036c10 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07036c6c 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07036c74 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07036c74 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07036c90 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07036c90 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07036cd8 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07036d08 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07036d8c 0000001c T CTRPluginFramework::HotkeyManager::Count()
07036da8 00000088 T CTRPluginFramework::Hotkey::AskForKeys()
07036e30 0000020c T CTRPluginFramework::HotkeyManager::AskForKeys()
0703703c 00000078 T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
070370b4 00000198 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
0703724c 000000c4 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07037310 00000148 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07037458 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
0703748c 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703748c 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703749c 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703749c 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
070374b8 00000374 t cwav_initialize
0703782c 000000ec t cwav_stopImpl.part.0
07037918 00000004 T cwavUseEnvironment
0703791c 00000034 T cwavSetVAToPACallback
07037950 00000050 T cwavLoad
070379a0 000004b4 T cwavPlay
07037e54 00000064 T cwavStop
07037eb8 00000168 T cwavFree
07038020 0000003c T fontEnsureMappedExtension
0703805c 0000002c W MemBlock::Create(unsigned char*, unsigned long)
07038088 00000034 W MemPool::DelBlock(MemBlock*)
070380bc 0000005c T MemPool::CoalesceRight(MemBlock*)
07038118 00000100 T MemPool::Allocate(MemChunk&, unsigned long, int)
07038218 00000100 T MemPool::Deallocate(MemChunk const&)
07038318 00000020 T MemPool::GetFreeSpace()
07038338 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07038338 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
070383fc 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
07038404 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
0703841c 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0703841c 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07038444 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070386d4 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703897c 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07038c0c 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07038c40 0000031c T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07038f5c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
07038f70 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
07038f84 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
07038f98 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
07038f9c 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
07038fa0 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07038fc8 000000bc t __tcf_1
07039084 00000038 t std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned int, void const*) [clone .isra.0]
070390bc 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07039118 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07039158 00000024 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
0703917c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07039190 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
070391a4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
070391b8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
070391cc 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
070391e0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
070391f4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07039208 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0703921c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07039230 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07039380 0000014c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
070394cc 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0703950c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07039590 00000178 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
07039708 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
070397c8 00000064 t CTRPluginFramework::MenuHotkeyModifier()
0703982c 00000af4 T CTRPluginFramework::PluginMenuTools::InitMenu()
0703a320 00000064 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0703a384 00000108 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, char16_t*, unsigned long)
0703a48c 0000018c T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0703a48c 0000018c T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0703a618 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703a6c4 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0703a6f8 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
0703a73c 00000138 W std::__cxx11::to_string(int)
0703a874 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int)
0703a8c0 00000150 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0703aa10 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0703aba0 0000012c t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703accc 00000048 t CTRPluginFramework::Reboot()
0703ad14 00000054 t CTRPluginFramework::Shutdown()
0703ad68 00000208 t CTRPluginFramework::UpdateScreenshotText()
0703af70 0000012c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0703b09c 00000164 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703b200 00000424 t CTRPluginFramework::ScreenshotMenuCallback()
0703b624 00000658 t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
0703bc7c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0703bc9c 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0703bce4 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0703bd20 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0703bd30 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703bd8c 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0703bdcc 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0703bee4 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0703bf3c 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
0703bf4c 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
0703bf80 0000002c W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
0703bfac 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0703c01c 000000b8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_append<CTRPluginFramework::Region const&>(CTRPluginFramework::Region const&)
0703c0d4 00000030 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
0703c104 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0703c188 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0703c1e8 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0703c354 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0703c354 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0703c7c4 00000264 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0703ca28 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0703ca68 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0703cb10 000002bc T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0703cdcc 00000124 t CTRPluginFramework::ClearSearchFolder()
0703cef0 000000e8 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0703cfd8 000005b8 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
0703d590 0000003c W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region const, CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0703d5cc 00000300 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0703d8cc 000003ac T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703dc78 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
0703dc98 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0703dc98 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0703dcb8 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0703dcd8 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
0703dd30 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0703dd30 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0703ddb4 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703ddb4 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703de14 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703de14 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703de74 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0703de78 00000030 t CTRPluginFramework::GetIndex(int)
0703dea8 00000130 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0703dfd8 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
0703e04c 00000094 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0703e0e0 000001cc T CTRPluginFramework::HotkeysModifier::operator()()
0703e2ac 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0703e2ac 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0703e318 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
0703e344 000000d8 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_append<CTRPluginFramework::Button const&>(CTRPluginFramework::Button const&)
0703e41c 00000038 W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
0703e454 00000154 T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703e454 00000154 T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703e5a8 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0703e5a8 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0703e5e0 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703e63c 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703e63c 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703e688 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703e70c 00000348 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0703ea54 000000b8 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0703eb0c 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0703ec48 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
0703ec70 00000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0703ed08 000000b4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0703edbc 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0703edec 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
0703ee3c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703eea8 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
0703ef98 00000280 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0703f218 00000324 T CTRPluginFramework::GatewayRAMDumper::operator()()
0703f53c 00000004 T cwav_defaultVAToPA
0703f540 00000004 T cwavEnvUseEnvironment
0703f544 00000008 T cwavEnvGetEnvironment
0703f54c 00000004 T cwavEnvInitialize
0703f550 00000004 T cwavEnvFinalize
0703f554 00000014 T cwavEnvCompatibleEncoding
0703f568 00000008 T cwavEnvGetChannelAmount
0703f570 00000018 T cwavEnvIsChannelAvailable
0703f588 000000f4 T cwavEnvPlay
0703f67c 00000004 T cwavEnvChannelIsPlaying
0703f680 00000004 T cwavEnvStop
0703f684 00000044 T CTRPluginFramework::Search::UpdateProgress()
0703f6c8 00000050 T CTRPluginFramework::Search::Cancel()
0703f718 00000184 T CTRPluginFramework::Search::CheckNextRegion()
0703f89c 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703f8f8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703f97c 00000008 T CTRPluginFramework::Search::GetHeader() const
0703f984 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0703f9cc 0000000c T CTRPluginFramework::Search::GetType() const
0703f9d8 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0703f9f0 00000070 T CTRPluginFramework::Search::WriteHeader()
0703fa60 00000058 T CTRPluginFramework::Search::WriteResults()
0703fab8 00000120 T CTRPluginFramework::Search::CreateIndexTable()
0703fbd8 00000144 T CTRPluginFramework::Search::ExecuteSearch()
0703fd1c 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0703fd64 000001b4 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703fd64 000001b4 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703ff18 0000034c T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0703ff18 0000034c T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07040264 00000228 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0704048c 000000d0 T CTRPluginFramework::Search32::FirstSearchUnknown()
0704055c 000000c4 T CTRPluginFramework::Search32::FirstSearchSpecified()
07040620 00000064 W CTRPluginFramework::Search::~Search()
07040620 00000064 W CTRPluginFramework::Search::~Search()
07040684 00000044 T CTRPluginFramework::Search32::~Search32()
07040684 00000044 T CTRPluginFramework::Search32::~Search32()
070406c8 00000020 T CTRPluginFramework::Search32::~Search32()
070406e8 00000024 W CTRPluginFramework::Search::~Search()
0704070c 00000208 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0704070c 00000208 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07040914 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07040914 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07040934 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07040934 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
070409c8 000000d4 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_append<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07040a9c 00000038 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07040ad4 00000110 W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07040be4 000001b4 T CTRPluginFramework::Search32::SecondSearchSpecified()
07040d98 000000f8 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
07040e90 000001a4 T CTRPluginFramework::Search32::SecondSearchUnknown()
07041034 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0704116c 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070411b8 00000148 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07041300 00000148 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
07041448 0000004c W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07041494 000000d4 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07041568 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
070415a4 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07041624 000000f4 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07041718 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07041764 00000338 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
07041a9c 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07041af8 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07041b38 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
07041bec 00000058 T CTRPluginFramework::SearchMenu::_JumpInEditor()
07041c44 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07041cc8 00000080 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<char const* const*>(char const* const*, char const* const*, std::forward_iterator_tag) [clone .isra.0]
07041d48 000000a4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07041d48 000000a4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07041dec 0000018c T CTRPluginFramework::SearchMenu::Update()
07041f78 0000018c T CTRPluginFramework::SearchMenu::_Edit()
07042104 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07042180 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
070421e0 00000120 W std::__cxx11::to_string(unsigned long)
07042300 00000168 T CTRPluginFramework::SearchMenu::_Export()
07042468 00000154 T CTRPluginFramework::SearchMenu::_ExportAll()
070425bc 000005b0 T CTRPluginFramework::SearchMenu::Draw()
07042b6c 0000011c T CTRPluginFramework::SearchMenu::_ShowGame()
07042c88 0000053c T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
070431c4 00000920 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043ae4 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070443f4 000008e8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07044cdc 00000c54 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07045930 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07045db4 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704623c 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070466b8 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07046ce0 00000c88 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047968 0000075c T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070480c4 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070484cc 000006d4 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07048ba0 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07049444 0000093c T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07049d80 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704a6a4 00000df0 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704b494 0000000c T __sync_init
0704b4a0 00000018 T __sync_fini
0704b4b8 0000002c T syncArbitrateAddressWithTimeout
0704b4e4 0000001c T LightLock_Init
0704b500 000000b0 T LightLock_Lock
0704b5b0 00000040 T LightLock_Unlock
0704b5f0 00000024 T RecursiveLock_Init
0704b614 00000030 T RecursiveLock_Lock
0704b644 00000078 T RecursiveLock_TryLock
0704b6bc 00000054 T RecursiveLock_Unlock
0704b710 00000040 T LightEvent_Init
0704b750 000000a4 T LightEvent_Clear
0704b7f4 00000048 T LightEvent_Pulse
0704b83c 000000c8 T LightEvent_Signal
0704b904 000000a0 T LightEvent_Wait
0704b9a4 00000014 T LightSemaphore_Init
0704b9b8 00000094 T LightSemaphore_Acquire
0704ba4c 00000064 T LightSemaphore_Release
0704bab0 00000084 W envGetHandle
0704bb34 00000050 W envDestroyHandles
0704bb84 00000074 T osConvertVirtToPhys
0704bbf8 00000054 T osGetTimeRef
0704bc4c 000000ec T osGetTime
0704bd38 00000094 T fontEnsureMapped
0704bdcc 00000100 T fontGlyphIndexFromCodePoint
0704becc 00000070 T fontGetCharWidthInfo
0704bf3c 0000012c T srvInit
0704c068 00000058 T srvExit
0704c0c0 000000a0 T srvGetServiceHandleDirect
0704c160 00000038 T srvGetServiceHandle
0704c198 00000038 T srvPublishToSubscriber
0704c1d0 00000090 t mappableFindAddressWithin
0704c260 00000028 T mappableInit
0704c288 00000080 T mappableAlloc
0704c308 00000004 T mappableFree
0704c30c 000000a4 T cfguInit
0704c3b0 0000003c T cfguExit
0704c3ec 00000054 T CFGU_GetSystemLanguage
0704c440 000000e4 T gspExit
0704c524 0000008c T acInit
0704c5b0 0000003c T acExit
0704c5ec 000000a4 T amInit
0704c690 0000003c T amExit
0704c6cc 000000b4 T sslcInit
0704c780 00000048 T sslcExit
0704c7c8 00000048 T sslcGenerateRandomData
0704c810 00000158 T aptSendCommand
0704c968 00000030 T aptHook
0704c998 00000030 T aptUnhook
0704c9c8 00000028 T APT_PrepareToCloseApplication
0704c9f0 00000048 T APT_CloseApplication
0704ca38 0000007c T APT_CheckNew3DS
0704cab4 00000048 T APT_GetSharedFont
0704cafc 00000024 W hidShouldUseIrrst
0704cb20 0000018c T hidInit
0704ccac 000000e8 T hidExit
0704cd94 000002a4 T hidScanInput
0704d038 00000010 T hidKeysHeld
0704d048 00000010 T hidKeysDown
0704d058 00000010 T hidKeysUp
0704d068 00000018 T hidTouchRead
0704d080 0000000c T srvPmGetSessionHandle
0704d08c 000000d0 T fsInit
0704d15c 0000003c T fsExit
0704d198 000000cc T FSUSER_OpenFile
0704d264 000000bc T FSUSER_DeleteFile
0704d320 000000f8 T FSUSER_RenameFile
0704d418 000000bc T FSUSER_DeleteDirectoryRecursively
0704d4d4 000000d4 T FSUSER_CreateFile
0704d5a8 000000c4 T FSUSER_CreateDirectory
0704d66c 000000f8 T FSUSER_RenameDirectory
0704d764 000000b4 T FSUSER_OpenDirectory
0704d818 00000094 T FSUSER_OpenArchive
0704d8ac 00000058 T FSFILE_Read
0704d904 00000060 T FSFILE_Write
0704d964 00000038 T FSFILE_GetSize
0704d99c 00000028 T FSFILE_SetSize
0704d9c4 0000003c T FSFILE_Close
0704da00 00000024 T FSFILE_Flush
0704da24 00000028 T FSFILE_SetPriority
0704da4c 00000050 T FSDIR_Read
0704da9c 0000003c T FSDIR_Close
0704dad8 00000010 T rbtree_init
0704dae8 0000019c t do_insert
0704dc84 00000008 T rbtree_insert
0704dc8c 00000090 T rbtree_rotate
0704dd1c 00000310 T rbtree_remove
0704e02c 00000074 T rbtree_find
0704e0a0 00000054 T encode_utf16
0704e0f4 000000e0 T encode_utf8
0704e1d4 00000064 T decode_utf16
0704e238 0000013c T decode_utf8
0704e374 000000c0 T utf8_to_utf16
0704e434 T svcQueryMemory
0704e464 T svcExitProcess
0704e46c T svcCreateThread
0704e48c T svcExitThread
0704e494 T svcSleepThread
0704e49c T svcSetThreadPriority
0704e4a4 T svcReleaseMutex
0704e4ac T svcCreateEvent
0704e4c0 T svcSignalEvent
0704e4c8 T svcClearEvent
0704e4d0 T svcMapMemoryBlock
0704e4d8 T svcUnmapMemoryBlock
0704e4e0 T svcCreateAddressArbiter
0704e4f4 T svcArbitrateAddress
0704e50c T svcArbitrateAddressNoTimeout
0704e514 T svcCloseHandle
0704e51c T svcWaitSynchronization
0704e524 T svcWaitSynchronizationN
0704e54c T svcDuplicateHandle
0704e560 T svcGetSystemTick
0704e568 T svcGetSystemInfo
0704e580 T svcGetProcessInfo
0704e598 T svcConnectToPort
0704e5ac T svcSendSyncRequest
0704e5b4 T svcOpenProcess
0704e5c8 T svcGetProcessId
0704e5dc T svcGetThreadId
0704e5f0 T svcBreak
0704e5f8 T svcInvalidateProcessDataCache
0704e600 T svcFlushProcessDataCache
0704e608 T svcKernelSetState
0704e610 T svcQueryProcessMemory
0704e634 00000160 T irrstInit
0704e794 000000cc T irrstExit
0704e860 000000b4 T irrstScanInput
0704e914 00000024 T irrstKeysHeld
0704e938 0000005c T rbtree_node_next
0704e994 00000004 T operator delete(void*)
0704e998 00000004 T operator delete(void*, std::nothrow_t const&)
0704e99c 00000004 T operator delete(void*, unsigned int)
0704e9a0 00000004 T operator delete[](void*)
0704e9a4 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
0704e9b0 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0704e9bc 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
0704e9c8 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
0704e9d8 00000038 t (anonymous namespace)::init()
0704ea10 00000024 t (anonymous namespace)::init_static_cond()
0704ea34 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704ea34 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704ea54 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704ea80 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704ea80 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704eaa0 0000002c W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704eacc 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704eacc 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704eaec 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704eb18 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704eb18 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704eb38 0000002c W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704eb64 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
0704eb90 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
0704ebbc 0000002c W __gnu_cxx::__throw_concurrence_broadcast_error()
0704ebe8 00000178 T __cxa_guard_acquire
0704ed60 000000b0 T __cxa_guard_release
0704ee10 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704ee10 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704ee30 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704ee5c 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704ee5c 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704ee6c 00000014 T std::get_new_handler()
0704ee80 0000005c T operator new(unsigned int)
0704eedc 0000001c T operator new(unsigned int, std::nothrow_t const&)
0704eef8 00000004 T operator new[](unsigned int)
0704eefc 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704eefc 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704ef1c 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704ef48 00000138 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704f080 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704f108 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704f14c 00000004 T std::type_info::~type_info()
0704f14c 00000004 T std::type_info::~type_info()
0704f150 00000008 T std::type_info::__is_pointer_p() const
0704f150 00000008 T std::type_info::__is_function_p() const
0704f158 00000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0704f16c 00000014 T std::__detail::_List_node_base::_M_unhook()
0704f180 00000058 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
0704f1d8 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
0704f248 00000288 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0704f4d0 0000002c T std::__throw_bad_alloc()
0704f4fc 0000002c T std::__throw_bad_array_new_length()
0704f528 00000040 T std::__throw_logic_error(char const*)
0704f568 00000040 T std::__throw_invalid_argument(char const*)
0704f5a8 00000040 T std::__throw_length_error(char const*)
0704f5e8 00000040 T std::__throw_out_of_range(char const*)
0704f628 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
0704f638 000000e4 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
0704f720 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
0704f800 00000044 T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
0704f844 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0704f898 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0704f8bc 00000140 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned int, char const*, unsigned int, unsigned int)
0704f9fc 0000000c T std::bad_alloc::what() const
0704fa08 00000020 T std::bad_alloc::~bad_alloc()
0704fa08 00000020 T std::bad_alloc::~bad_alloc()
0704fa28 0000002c T std::bad_alloc::~bad_alloc()
0704fa54 0000000c T std::bad_array_new_length::what() const
0704fa60 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704fa60 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704fa80 0000002c T std::bad_array_new_length::~bad_array_new_length()
0704faac 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0704fb08 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704fb1c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704fb1c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704fb3c 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0704fb68 00000064 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704fbcc 0000007c T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0704fc48 000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704fd1c 00000128 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0704fe44 000000d8 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0704ff1c 00000044 T __cxa_allocate_exception
0704ff60 0000002c T __cxa_free_exception
0704ff8c 000001b0 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0705013c T __cxa_end_cleanup
0705014c 00000134 T __cxa_type_match
07050280 000000b4 T __cxa_begin_cleanup
07050334 000000b4 T __gnu_end_cleanup
070503e8 000000cc T __cxa_begin_catch
070504b4 000000e0 T __cxa_end_catch
07050594 00000004 T std::exception::~exception()
07050594 00000004 T std::exception::~exception()
07050598 00000004 T std::bad_exception::~bad_exception()
07050598 00000004 T std::bad_exception::~bad_exception()
0705059c 0000000c T transaction clone for std::exception::what() const
0705059c 0000000c T std::exception::what() const
070505a8 0000000c T transaction clone for std::bad_exception::what() const
070505a8 0000000c T std::bad_exception::what() const
070505b4 00000018 T std::bad_exception::~bad_exception()
070505cc 0000003c t eh_globals_dtor(void*)
07050608 00000038 T __cxa_get_globals_fast
07050640 00000074 T __cxa_get_globals
070506b4 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
070506f4 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
07050728 00000148 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07050870 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
070508c8 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
070509a0 000006dc T __gxx_personality_v0
0705107c 00000014 T __cxxabiv1::__terminate(void (*)())
07051090 00000018 T std::terminate()
070510a8 0000000c T __cxxabiv1::__unexpected(void (*)())
070510b4 00000018 T std::unexpected()
070510cc 00000014 T std::get_terminate()
070510e0 00000014 T std::get_unexpected()
070510f4 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07051154 00000054 T __cxa_init_primary_exception
070511a8 00000054 T __cxa_throw
070511fc 000000b0 T __cxa_rethrow
070512ac 00000008 T std::logic_error::what() const
070512ac 00000008 T std::runtime_error::what() const
070512b4 00000098 T std::logic_error::~logic_error()
070512b4 00000098 T std::logic_error::~logic_error()
0705134c 00000098 T std::invalid_argument::~invalid_argument()
0705134c 00000098 T std::invalid_argument::~invalid_argument()
070513e4 00000098 T std::length_error::~length_error()
070513e4 00000098 T std::length_error::~length_error()
0705147c 00000098 T std::out_of_range::~out_of_range()
0705147c 00000098 T std::out_of_range::~out_of_range()
07051514 000000a0 T std::logic_error::~logic_error()
070515b4 000000a0 T std::invalid_argument::~invalid_argument()
07051654 000000a0 T std::length_error::~length_error()
070516f4 000000a0 T std::out_of_range::~out_of_range()
07051794 000000d4 T std::logic_error::logic_error(char const*)
07051794 000000d4 T std::logic_error::logic_error(char const*)
07051868 00000020 T std::invalid_argument::invalid_argument(char const*)
07051868 00000020 T std::invalid_argument::invalid_argument(char const*)
07051888 00000020 T std::length_error::length_error(char const*)
07051888 00000020 T std::length_error::length_error(char const*)
070518a8 00000020 T std::out_of_range::out_of_range(char const*)
070518a8 00000020 T std::out_of_range::out_of_range(char const*)
070518c8 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0705194c 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
07051950 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
070519c0 0000002c T __cxa_call_terminate
070519ec 00000148 T __cxa_call_unexpected
07051b38 0000013c T ceil
07051c74 00000068 T roundf
07051ce0 0000027c T log2
07051f5c 000000c0 T ceilf
07052020 00000144 T floor
07052164 000000c0 T floorf
07052224 00000024 t with_errno
07052248 00000050 T __math_divzero
07052298 0000001c T __math_invalid
070522b4 00000044 T __popcountsi2
070522f8 00000030 T __aeabi_f2lz
070522f8 00000030 T __fixsfdi
07052328 00000040 T __aeabi_f2ulz
07052328 00000040 T __fixunssfdi
07052368 00000120 T __udivmoddi4
07052488 00000018 t selfrel_offset31
070524a0 00000090 t search_EIT_table
07052530 00000040 t __gnu_unwind_get_pr_addr
07052570 0000010c t get_eit_entry
0705267c 00000088 t restore_non_core_regs
07052704 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
07052718 00000004 t _Unwind_DebugHook
0705271c 00000064 t unwind_phase2
07052780 00000140 t unwind_phase2_forced
070528c0 000000a4 T __gnu_Unwind_RaiseException
07052964 00000028 T __gnu_Unwind_ForcedUnwind
0705298c 00000074 T __gnu_Unwind_Resume
07052a00 0000002c T __gnu_Unwind_Resume_or_Rethrow
07052a2c 00000004 T _Unwind_Complete
07052a30 00000018 T _Unwind_DeleteException
07052a48 00000064 T _Unwind_VRS_Get
07052aac 0000002c t _Unwind_GetGR
07052ad8 00000064 T _Unwind_VRS_Set
07052b3c 0000002c t _Unwind_SetGR
07052b68 000000c0 T __gnu_Unwind_Backtrace
07052c28 00000410 t __gnu_unwind_pr_common
07053038 00000008 T __aeabi_unwind_cpp_pr0
07053040 00000008 W __aeabi_unwind_cpp_pr1
07053048 00000008 W __aeabi_unwind_cpp_pr2
07053050 00000458 T _Unwind_VRS_Pop
070534a8 00000064 t next_unwind_byte
0705350c 0000002c t _Unwind_GetGR.constprop.0
07053538 00000004 t unwind_UCB_from_context
0705353c 00000460 T __gnu_unwind_execute
0705399c 00000048 T __gnu_unwind_frame
070539e4 00000010 T _Unwind_GetRegionStart
070539f4 0000001c T _Unwind_GetLanguageSpecificData
07053a10 00000008 T _Unwind_GetDataRelBase
07053a18 00000008 T _Unwind_GetTextRelBase
07053a20 000000d8 T strncmp
07053af8 00000130 T strchr
07053c28 00000024 T getenv
07053c4c 0000005c T strlen
07053ca8 00000160 T memmove
07053e08 00000140 t iso_year_adjust
07053f48 000010dc t __strftime.isra.0
07055024 00000030 T strftime
07055054 0000000c T abs
07055060 00000064 t sulp
070550c8 000013f0 T _strtod_l
070564b8 00000108 T strtof
070565c0 00000010 T ctime
070565d0 00000068 T sprintf
07056638 000000e0 T memchr
07056718 000000f4 t rshift
0705680c 000008e8 T __gethex
070570f4 000000d4 T memcmp
070571c8 000001e4 t _strtoul_l.isra.0
070573ac 00000030 T _strtoul_r
070573dc 00000034 T strtoul
07057410 0000003c T __libc_fini_array
0705744c 00000018 T isxdigit
07057464 00000010 T _tzset_unlocked
07057474 00000020 T calloc
07057494 000000ac T _vsnprintf_r
07057540 00000038 T vsnprintf
07057578 0000000c T labs
07057584 00000148 T _fclose_r
070576cc 0000000c T __gettzinfo
070576d8 000000c0 T _calloc_r
07057798 00000020 T asctime
070577b8 00000144 T __smakebuf_r
070578fc 00000020 T realloc
0705791c 00000020 T memalign
0705793c 0000001c t stdio_exit_handler
07057958 0000005c t cleanup_stdio
070579b4 00000154 t global_stdio_init.part.0
07057b08 0000005c T __sinit
07057b64 0000000c T __sfp_lock_acquire
07057b70 0000000c T __sfp_lock_release
07057b7c 0000000c T __tz_lock
07057b88 0000000c T __tz_unlock
07057b94 000007e8 T _malloc_r
0705837c 000000f8 T _malloc_trim_r
07058474 00000300 T _free_r
07058774 000005e4 t get_arg
07058d58 0000335c T _svfprintf_r
0705c0b4 00000018 T isspace
0705c0cc 0000004c T strnlen
0705c118 00000660 T _tzset_unlocked_r
0705c778 0000000c T __errno
0705c784 00000034 T malloc
0705c7b8 00000018 T free
0705c7d0 00000130 T memcpy
0705c900 000000d4 T sniprintf
0705c9d4 0000004c T time
0705ca20 000000c8 T _findenv_r
0705cae8 00000018 T _getenv_r
0705cb00 000000e8 T memset
0705cbe8 000004a4 T _realloc_r
0705d08c 00000080 T asctime_r
0705d10c 00000070 T _fwalk_sglue
0705d17c 0000000c T __malloc_lock
0705d188 0000000c T __malloc_unlock
0705d194 00000254 T __tzcalc_limits
0705d3e8 000000f0 T strcpy
0705d4d8 00000014 T atexit
0705d4ec 00000020 T localtime
0705d50c 000000d4 T snprintf
0705d5e0 000000c4 T strncpy
0705d6a4 00000264 t _strtoull_l.isra.0
0705d908 00000030 T _strtoull_r
0705d938 00000028 T _wcsrtombs_r
0705d960 000005e4 t get_arg
0705df44 000021a8 T _svfiprintf_r
070600ec 0000004c T __match
07060138 000002a4 T __hexnan
070603dc 00000084 T __libc_init_array
07060460 00000228 T __sflush_r
07060688 00000094 T _fflush_r
07060720 00000010 T nan
07060730 0000000c T nanf
07060740 00000088 T frexp
070607c8 00000068 T siprintf
07060830 0000000c T __env_lock
0706083c 0000000c T __env_unlock
07060848 0000005c T __assert_func
070608a4 00000088 T _Balloc
0706092c 0000001c T _Bfree
07060948 000000f4 T __multadd
07060a3c 00000110 T __s2b
07060b4c 00000080 T __hi0bits
07060bcc 000000f4 T __lo0bits
07060cc0 000000a4 T __i2b
07060d64 00000208 T __multiply
07060f6c 00000130 T __pow5mult
0706109c 00000138 T __lshift
070611d4 00000058 T __mcmp
0706122c 000001f0 T __mdiff
0706141c 00000068 T __ulp
07061484 000000d0 T __b2d
07061554 00000120 T __d2b
07061674 00000078 T __ratio
070616ec 00000088 T __copybits
07061774 0000005c T __any_on
070617d0 00000024 T __locale_mb_cur_max
070617f4 000000a4 T __ssprint_r
07061898 0000003c T fiprintf
070618d4 00000150 T _memalign_r
07061a24 00000160 T _wcsnrtombs_l
07061b84 00000064 T _wcsnrtombs_r
07061be8 00000324 T __utf8_mbtowc
07061f0c 00000078 T siscanf
07061f84 00000044 T __sread
07061fc8 00000008 T __seofread
07061fd0 00000068 T __swrite
07062038 00000040 T __sseek
07062078 00000008 T __sclose
07062080 00000024 T _localeconv_r
070620a4 000001b4 t quorem
07062258 00001370 T _dtoa_r
070635c8 000000a0 T _wcrtomb_r
07063668 00000344 t _strtol_l.part.0
070639ac 00000060 T _strtol_r
07063a0c 000000b0 T __register_exitproc
07063abc 00000128 T __ssputs_r
07063be4 00000360 T localtime_r
07063f44 000000f0 T __utf8_wctomb
07064034 00000268 T gmtime_r
0706429c 000005e4 t get_arg
07064880 00002264 T _vfiprintf_r
07066ae4 000000b8 t __sbprintf
07066b9c 00000050 t get_arg
07066bec 000000e0 T _sungetc_r
07066ccc 0000006c T __ssrefill_r
07066d38 000000c4 T _sfread_r
07066dfc 00002298 T __ssvfiscanf_r
07069094 00000030 T __sprint_r
070690c4 00000008 T iswspace
070690cc 000000f0 T __sccl
070691bc 000000b4 T _mbrtowc_r
07069270 00000194 T __swsetup_r
07069404 000000a8 T __submore
070694ac 00000038 T iswspace_l
070694e4 00000480 T __sfvwrite_r
07069964 0000047c t _strtoll_l.isra.0
07069de0 00000030 T _strtoll_r
07069e10 00000090 T category
07069ea0 00000088 T _fstat_r
07069f28 0000002c T __getreent
07069f54 00000030 T _gettimeofday_r
07069f84 0000003c T __get_handle
07069fc0 000000f4 T _close_r
0706a0b4 00000008 t null_write
0706a0bc 00000008 T _isatty_r
0706a0c4 0000008c T _lseek_r
0706a150 00000088 T _read_r
0706a1d8 00000078 W _sbrk_r
0706a250 0000001c T __libc_lock_acquire
0706a26c 0000001c T __libc_lock_release
0706a288 0000001c T __libc_lock_acquire_recursive
0706a2a4 0000001c T __libc_lock_release_recursive
0706a2c0 00000088 T _write_r
0706a348 00000038 T __aeabi_d2lz
0706a348 00000038 T __fixdfdi
0706a380 00000040 T __aeabi_d2ulz
0706a380 00000040 T __fixunsdfdi
0706a3c0 T _fini
0706a3d8 00000030 r C.6.0
0706cbeb 00000a00 r font
0706d5f0 00000058 r CTRPluginFramework::g_OSDPattern
0706d648 0000001c R vtable for CTRPluginFramework::FloatingButton
0706d664 00000014 r C.34.0
0706d678 00000018 V vtable for CTRPluginFramework::DefaultRandomBackend
0706d690 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
0706d6ac 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
0706d6b4 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0706d6d0 00000004 R CTRPluginFramework::Color::SkyBlue
0706d6d4 00000004 R CTRPluginFramework::Color::Orange
0706d6d8 00000004 R CTRPluginFramework::Color::LimeGreen
0706d6dc 00000004 R CTRPluginFramework::Color::ForestGreen
0706d6e0 00000004 R CTRPluginFramework::Color::Gainsboro
0706d6e4 00000004 R CTRPluginFramework::Color::DimGrey
0706d6e8 00000004 R CTRPluginFramework::Color::DeepSkyBlue
0706d6ec 00000004 R CTRPluginFramework::Color::DarkGrey
0706d6f0 00000004 R CTRPluginFramework::Color::Brown
0706d6f4 00000004 R CTRPluginFramework::Color::BlackGrey
0706d6f8 00000004 R CTRPluginFramework::Color::Green
0706d6fc 00000004 R CTRPluginFramework::Color::Gray
0706d700 00000004 R CTRPluginFramework::Color::Silver
0706d704 00000004 R CTRPluginFramework::Color::Magenta
0706d708 00000004 R CTRPluginFramework::Color::Cyan
0706d70c 00000004 R CTRPluginFramework::Color::Yellow
0706d710 00000004 R CTRPluginFramework::Color::Blue
0706d714 00000004 R CTRPluginFramework::Color::Red
0706d718 00000004 R CTRPluginFramework::Color::White
0706d71c 00000004 R CTRPluginFramework::Color::Black
0706d728 00000030 r C.8.0
0706dd8c 00000024 r C.1.1
0706ddb0 00000054 r C.0.0
0706de04 00000014 r CTRPluginFramework::defaultSoundFiles
0706de20 00000014 V vtable for CTRPluginFramework::MenuItem
0706de34 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0706de48 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0706de7c 00000028 r C.0.0
0706dea4 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
0706dec4 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
0706dee4 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
0706df04 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0706df14 0000001c R vtable for CTRPluginFramework::TouchKey
0706df30 0000001c R vtable for CTRPluginFramework::TextBox
0706df5c 0000001c R vtable for CTRPluginFramework::NumericTextBox
0706df78 00000014 r C.0.0
0706df8c 0000001c R vtable for CTRPluginFramework::ComboBox
0706dfa8 0000001c R vtable for CTRPluginFramework::Button
0706e038 00000040 r RegNames
0706e078 00000010 r shift_names
0706e088 00000040 r cond_names
0706e0c8 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
0706e35c 00000018 r C.120.0
0706e374 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
0706e37c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0706e384 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
0706e38c 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
0706e3a0 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
0706e3ac 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0706e42c 0000002e r C.44.0
0706e460 00000008 R CTRPluginFramework::Time::Zero
0706e468 00000384 r UserManualFilled15_array
0706e7ec 00000384 r Unsplash15_array
0706eb70 00000384 r UnCheckedCheckbox_array
0706eef4 000009c4 r TrashFilled25_array
0706f8b8 000009c4 r Trash25_array
0707027c 00000384 r Star15_array
07070600 00000384 r Shutdown15_array
07070984 00000384 r Settings15_array
07070d08 00000384 r Search15_array
0707108c 000009c4 r Save25_array
07071a50 00001900 r Rocket40_array
07073350 00000384 r Restart15_array
070736d4 00000384 r RAM15_array
07073a58 000009c4 r PlusFilled25_array
0707441c 000009c4 r Plus25_array
07074de0 00000384 r More15_array
07075164 00000384 r Maintenance15_array
070754e8 000009c4 r KeyboardFilled25_array
07075eac 000009c4 r Keyboard25_array
07076870 000009c4 r InfoFilled25_array
07077234 000009c4 r Info25_array
07077bf8 00000384 r HandCursor15_array
07077f7c 00000384 r Grid15_array
07078300 000009c4 r GameControllerFilled25_array
07078cc4 000009c4 r GameController25_array
07079688 00000384 r GameController15_array
07079a0c 00000384 r FolderFilled_array
07079d90 00000384 r File15_array
0707a114 00000384 r EnterKeyFilled15_array
0707a498 00000384 r EnterKey15_array
0707a81c 000009c4 r EditFilled25_array
0707b1e0 000009c4 r Edit25_array
0707bba4 000009c4 r DuplicateFilled25_array
0707c568 000009c4 r Duplicate25_array
0707cf2c 00000e10 r DefaultKeyboardCustomIcon_array
0707dd3c 000009c4 r CutFilled25_array
0707e700 000009c4 r Cut25_array
0707f0c4 00000384 r Controller15_array
0707f448 00000640 r CloseWindowFilled20_array
0707fa88 00000640 r CloseWindow20_array
070800c8 000009c4 r ClipboardFilled25_array
07080a8c 000009c4 r Clipboard25_array
07081450 00000384 r ClearSymbolFilled15_array
070817d4 00000384 r ClearSymbol15_array
07081b58 00000384 r CheckedCheckbox_array
07081edc 00000384 r CapsLockOnFilled15_array
07082260 00000384 r CapsLockOn15_array
070825e4 000009c4 r AddFavoriteFilled25_array
07082fa8 000009c4 r AddFavorite25_array
0708396c 00000384 r About15_array
07083cfc 0000000c r C.124.1
07083d08 00000014 r C.111.0
07083d1c 00000023 r CTRPluginFramework::g_copyrightText
07083d3f 0000001e r CTRPluginFramework::g_ctrpfText
07083d6c 0000001c R vtable for CTRPluginFramework::MenuEntryTools
07083d88 00000038 r CTRPluginFramework::stable
07083dc0 00000038 r CTRPluginFramework::ktable
07083df8 00000038 R vtable for CTRPluginFramework::Search
07083e30 00000038 R vtable for CTRPluginFramework::Search32
07083e68 0000001c r C.86.0
07083e84 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
07083eac 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
07083eb8 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
07083ee4 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
07083ef0 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
07083f1c 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
07083f28 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
07083f50 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
07083f5c 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
07083f70 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
07083f84 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
07083f98 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
07083fac 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07083fd0 0000000c R typeinfo for __gnu_cxx::recursive_init_error
07083fdc 00000014 R vtable for __gnu_cxx::recursive_init_error
07083ff0 00000001 R std::nothrow
07083ff4 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0708401c 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
07084028 0000002c R vtable for __cxxabiv1::__si_class_type_info
07084054 0000000d R typeinfo name for std::type_info
07084064 00000008 R typeinfo for std::type_info
0708406c 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
0708407c 00000404 R std::__detail::__prime_list
07084480 00000018 V typeinfo name for std::_Sp_make_shared_tag
07084498 0000000d R typeinfo name for std::bad_alloc
070844a8 0000000c R typeinfo for std::bad_alloc
070844b4 00000014 R vtable for std::bad_alloc
070844c8 00000019 R typeinfo name for std::bad_array_new_length
070844e4 0000000c R typeinfo for std::bad_array_new_length
070844f0 00000014 R vtable for std::bad_array_new_length
07084504 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07084528 0000000c R typeinfo for __cxxabiv1::__class_type_info
07084534 0000002c R vtable for __cxxabiv1::__class_type_info
07084560 0000000d R typeinfo name for std::exception
07084570 00000008 R typeinfo for std::exception
07084578 00000012 R typeinfo name for std::bad_exception
0708458c 0000000c R typeinfo for std::bad_exception
07084598 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
070845b8 00000008 R typeinfo for __cxxabiv1::__forced_unwind
070845c0 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
070845e4 00000008 R typeinfo for __cxxabiv1::__foreign_exception
070845ec 00000014 R vtable for std::bad_exception
07084614 00000010 R typeinfo name for std::logic_error
07084624 0000000c R typeinfo for std::logic_error
07084630 00000015 R typeinfo name for std::invalid_argument
07084648 0000000c R typeinfo for std::invalid_argument
07084654 00000011 R typeinfo name for std::length_error
07084668 0000000c R typeinfo for std::length_error
07084674 00000011 R typeinfo name for std::out_of_range
07084688 0000000c R typeinfo for std::out_of_range
07084694 00000014 R vtable for std::logic_error
070846a8 00000014 R vtable for std::invalid_argument
070846bc 00000014 R vtable for std::length_error
070846d0 00000014 R vtable for std::out_of_range
070846e8 00000890 R __log2_data
070850a0 00000014 r fpinan.0
070850b4 00000014 r fpi.1
070850c8 00000028 r tinytens
070850f0 00000100 R __hexdig
070851f0 000000fc R _C_time_locale
070853d8 00000010 r zeroes.0
070853e8 00000010 r blanks.1
070853f8 00000101 R _ctype_
070854fc 00000024 r mon_name.0
07085520 00000015 r day_name.1
07085620 00000010 r zeroes.0
07085630 00000010 r blanks.1
07085640 0000006c R __action_table
070856ac 0000006c R __state_table
07085718 00000100 R __chclass
07085818 0000000c r p05.0
07085828 00000028 R __mprec_bigtens
07085850 000000c8 R __mprec_tens
07085918 00000060 R __month_lengths
07085a6c 00000010 r zeroes.0
07085a7c 00000010 r blanks.1
07085b0c 00000022 r basefix.0
07085b30 000035dc r categories
0708910c 00000080 R dotab_stdnull
0708918c R __tdata_align
070892f0 R __exidx_start
07089530 R __exidx_end
07089530 00000004 d CTRPluginFramework::dropEverything(CTRPluginFramework::MenuEntry*)::myInt
07089534 00000004 d CTRPluginFramework::ninetyFov(CTRPluginFramework::MenuEntry*)::myInt
07089538 00000004 d CTRPluginFramework::defaultCodes(CTRPluginFramework::MenuEntry*)::myInt
0708953c 00000004 d CTRPluginFramework::removeMobCap(CTRPluginFramework::MenuEntry*)::myInt
07089540 00000004 d CTRPluginFramework::itemLimit(CTRPluginFramework::MenuEntry*)::myInt
07089544 00000004 d CTRPluginFramework::enhancedParticles(CTRPluginFramework::MenuEntry*)::myInt
07089548 00000004 D cwavCurrentVAPAConvCallback
0708954c 00000018 D CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
07089564 00000018 D CTRPluginFramework::Screenshot::Path[abi:cxx11]
0708957c 00000004 D CTRPluginFramework::Screenshot::Screens
07089580 00000004 D CTRPluginFramework::Screenshot::Hotkeys
07089584 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
07089588 00000018 D CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
070895a0 00000018 D CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
070895b8 00000018 D CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
070895d0 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
070895d4 00000004 D CTRPluginFramework::FwkSettings::Header
070895d8 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
070895d9 00000001 D CTRPluginFramework::SystemImpl::Language
070895dc 00000018 D CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
070895f4 00000001 D CTRPluginFramework::EventManager::_refresh
070895f8 00000004 D CTRPluginFramework::RendererPriv::g_customColor
070895fc 000001f4 D opcode_names
070897f0 00000018 d CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07089808 00000004 D g_charPerSheet
0708980c 00000004 D UserManualFilled15
07089810 00000004 D Unsplash15
07089814 00000004 D UnCheckedCheckbox
07089818 00000004 D TrashFilled25
0708981c 00000004 D Trash25
07089820 00000004 D Star15
07089824 00000004 D Shutdown15
07089828 00000004 D Settings15
0708982c 00000004 D Search15
07089830 00000004 D Save25
07089834 00000004 D Rocket40
07089838 00000004 D Restart15
0708983c 00000004 D RAM15
07089840 00000004 D PlusFilled25
07089844 00000004 D Plus25
07089848 00000004 D More15
0708984c 00000004 D Maintenance15
07089850 00000004 D KeyboardFilled25
07089854 00000004 D Keyboard25
07089858 00000004 D InfoFilled25
0708985c 00000004 D Info25
07089860 00000004 D HandCursor15
07089864 00000004 D Grid15
07089868 00000004 D GameControllerFilled25
0708986c 00000004 D GameController25
07089870 00000004 D GameController15
07089874 00000004 D FolderFilled
07089878 00000004 D File15
0708987c 00000004 D EnterKeyFilled15
07089880 00000004 D EnterKey15
07089884 00000004 D EditFilled25
07089888 00000004 D Edit25
0708988c 00000004 D DuplicateFilled25
07089890 00000004 D Duplicate25
07089894 00000004 D DefaultKeyboardCustomIcon
07089898 00000004 D CutFilled25
0708989c 00000004 D Cut25
070898a0 00000004 D Controller15
070898a4 00000004 D CloseWindowFilled20
070898a8 00000004 D CloseWindow20
070898ac 00000004 D ClipboardFilled25
070898b0 00000004 D Clipboard25
070898b4 00000004 D ClearSymbolFilled15
070898b8 00000004 D ClearSymbol15
070898bc 00000004 D CheckedCheckbox
070898c0 00000004 D CapsLockOnFilled15
070898c4 00000004 D CapsLockOn15
070898c8 00000004 D AddFavoriteFilled25
070898cc 00000004 D AddFavorite25
070898d0 00000004 D About15
070898d4 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
070898d8 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
070898dc 00000004 d kCount
070898e0 00000004 d kInterval
070898e4 00000004 d kDelay
070898e8 00000004 D __cxxabiv1::__unexpected_handler
070898ec 00000004 D __cxxabiv1::__terminate_handler
070898f0 00000004 D _impure_ptr
070898f8 00000120 D _impure_data
07089a18 00000058 d tzinfo
07089a70 0000000c D __sglue
07089a7c 00000004 D __malloc_sbrk_base
07089a80 00000004 D __malloc_trim_threshold
07089a88 00000408 D __malloc_av_
07089e90 00000008 D _tzname
07089e98 0000016c D __global_locale
0708a004 00000004 D environ
0708a008 00001000 d handles
0708b008 0000000c d __stderr_handle
0708b014 0000000c d __stdout_handle
0708b020 0000000c d __stdin_handle
0708b02c 0000008c D devoptab_list
0708b0cc d _GLOBAL_OFFSET_TABLE_
0708b0d8 D __tdata_lma
0708b0e4 d __frame_dummy_init_array_entry
0708b0e4 D __init_array_start
0708b0e4 B __preinit_array_end
0708b0e4 B __preinit_array_start
0708b0e4 D __tdata_lma_end
0708b14c d __do_global_dtors_aux_fini_array_entry
0708b14c D __fini_array_start
0708b14c D __init_array_end
0708b1a8 D __bss_start__
0708b1a8 D __fini_array_end
0708b1a8 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708b1b4 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
0708b1b8 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
0708b1bc 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708b1c0 00000004 b ncsndMutex
0708b1c4 00000004 b ncsndCmdCurOff
0708b1c8 00000004 B ncsndSharedMem
0708b1cc 00000004 b ncsndCmdStartOff
0708b1d0 00000004 B ncsndCSNDHandle
0708b1d4 00000004 b ncsndRefCount
0708b1d8 00000004 B ncsndChannels
0708b1dc 00000010 B ncsndOffsets
0708b1ec 00000004 B ncsndSharedMemSize
0708b1f0 00000004 b ncsndSharedMemBlock
0708b1f4 00000001 b ncsndCookieHooked
0708b1f8 0000000c b ncsndCookie
0708b204 b saved_stack
0708b20c 00000004 b cwavListCount
0708b210 00000004 b cwavList
0708b214 00000004 b cwavAddedToList
0708b218 b completed.1
0708b21c b object.0
0708b234 00000004 b CTRPluginFramework::isReady
0708b238 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0708b240 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708b248 00000008 B CTRPluginFramework::Screenshot::_task
0708b250 00000008 B CTRPluginFramework::Screenshot::_hotkeyTimer
0708b258 00000008 B CTRPluginFramework::Screenshot::_timer
0708b260 00000004 B CTRPluginFramework::Screenshot::_display
0708b264 00000004 B CTRPluginFramework::Screenshot::_filecount
0708b268 00000004 B CTRPluginFramework::Screenshot::_mode
0708b26c 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
0708b270 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
0708b278 00000008 B CTRPluginFramework::Screenshot::Timer
0708b280 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708b284 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0708b288 00000004 B CTRPluginFramework::ScreenImpl::Top
0708b28c 000000ac b CTRPluginFramework::_botBuf
0708b338 000000ac b CTRPluginFramework::_topBuf
0708b3e4 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0708b3e8 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0708b3f0 00000050 b CTRPluginFramework::g_fpsCounter
0708b440 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
0708b448 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
0708b450 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0708b458 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708b460 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0708b468 00000001 B CTRPluginFramework::OSDImpl::WritesToPrevFB
0708b469 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
0708b46a 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0708b46c 00000020 B CTRPluginFramework::OSDImpl::previousFBAddr
0708b48c 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
0708b498 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0708b4a4 0000000c B CTRPluginFramework::OSDImpl::Notifications
0708b4b0 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0708b4d4 0000000c B CTRPluginFramework::OSDImpl::RecLock
0708b4e0 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0708b4f8 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0708b510 00000004 B CTRPluginFramework::OSDImpl::OSDHook
0708b514 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0708b518 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708b51c 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708b51d 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0708b51e 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0708b520 000000b0 B CTRPluginFramework::Preferences::Settings
0708b5d0 00000008 B CTRPluginFramework::Preferences::Backlights
0708b5d8 00000008 B CTRPluginFramework::Preferences::Flags
0708b5e0 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0708b5e4 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0708b5e8 00000004 B CTRPluginFramework::Utils::randomBackend
0708b5ec 00000001 b CTRPluginFramework::g_randomBackendDefault
0708b5f0 00000004 B CTRPluginFramework::System::OnAbort
0708b5f4 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
0708b5f8 00000004 B CTRPluginFramework::Process::OnPauseResume
0708b5fc 00000004 B CTRPluginFramework::Process::exceptionCallback
0708b600 00000004 B CTRPluginFramework::Controller::_keysReleased
0708b604 00000004 B CTRPluginFramework::Controller::_keysHeld
0708b608 00000004 B CTRPluginFramework::Controller::_keysDown
0708b60c 00000004 b CTRPluginFramework::g_runningInstance
0708b610 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708b614 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708b618 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708b61a 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708b61c 0000001c B CTRPluginFramework::Render::_randomSets[abi:cxx11]
0708b638 00000004 b g_onLoadCroLock
0708b63c 00000004 b g_onSharedMemMapHook
0708b640 00000004 b g_onLoadCroHook
0708b644 00000008 b CTRPluginFramework::g_mainThread
0708b64c 00000004 B CTRPluginFramework::g_keepEvent
0708b650 00000004 B CTRPluginFramework::g_keepThreadHandle
0708b654 00000004 B CTRPluginFramework::g_continueGameEvent
0708b658 00000008 B CTRPluginFramework::_sdmcArchive
0708b660 00001000 b CTRPluginFramework::keepThreadStack
0708c660 00000004 B g_temporaryInitLibStack
0708c664 00000004 b g_mainThreadVars
0708c668 00000001 b properInit
0708c669 00000001 b fakeInit
0708c66c 00000004 b plgLdrRefCount
0708c670 00000004 b plgReply
0708c674 00000004 b plgEvent
0708c678 00000004 b plgLdrArbiter
0708c67c 00000004 b plgLdrHandle
0708c680 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
0708c684 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
0708c688 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
0708c690 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
0708c698 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
0708c69c 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
0708c6a4 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
0708c6ac 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
0708c6b4 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
0708c6b8 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
0708c6bc 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
0708c6c0 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
0708c6c4 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
0708c6c8 00000008 b CTRPluginFramework::g_sleepEvent
0708c6d0 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708c6d4 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0708c6d8 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708c6dc 00000001 B CTRPluginFramework::SystemImpl::IsCitra
0708c6dd 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0708c6de 00000001 B _g_isCitra
0708c6e0 000000a8 B CTRPluginFramework::Scheduler::_singleton
0708c788 00000044 b CTRPluginFramework::g_previousException
0708c7cc 00000004 B CTRPluginFramework::ProcessImpl::processEventCallback
0708c7d0 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
0708c7d4 00000008 B CTRPluginFramework::ProcessImpl::waitForExitEvent
0708c7dc 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0708c7e8 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708c7f4 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0708c804 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
0708c808 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0708c86c 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708c870 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0708c878 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0708c880 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708c884 00000004 B CTRPluginFramework::ProcessImpl::Status
0708c888 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0708c88c 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708c890 0000001c B CTRPluginFramework::HookManager::_singleton
0708c8ac 00000008 b CTRPluginFramework::Heap::g_heapPool
0708c8b4 0000000c b CTRPluginFramework::Heap::_mutex
0708c8c0 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708c8c4 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0708c8c8 0000000c b sAddrMap
0708c8d4 0000000c B CTRPluginFramework::FSPath::FSMutex
0708c8e0 00000004 B CTRPluginFramework::EventManager::_firstTouch
0708c8e4 00000001 B CTRPluginFramework::EventManager::_isTouching
0708c8e8 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
0708c8ec 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
0708c8f8 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0708c8fc 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0708c90c 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0708c910 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
0708c91c 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708c920 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708c924 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708c928 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708c930 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708c938 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708c940 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708c948 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708c94c 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708c954 00000004 b CTRPluginFramework::g_radioId
0708c958 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0708c95c 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708c960 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708c968 00000004 b CTRPluginFramework::__pmARinstance
0708c96c 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0708c970 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
0708c974 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708c978 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708c980 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708c988 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708c98c 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708c99c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708c9a0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708c9b0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708c9b4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708c9c4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708c9c8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708c9d8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708c9dc 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708c9ec 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708c9f0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708ca00 00000008 B CTRPluginFramework::KeyboardImpl::_inputClock
0708ca08 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0708ca14 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0708ca20 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708ca2c 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708ca30 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708ca40 00000004 B CTRPluginFramework::__g_hexEditor
0708ca44 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708ca48 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708ca58 00000004 b CTRPluginFramework::__converter
0708ca5c 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
0708ca6c 00000028 B CTRPluginFramework::Window::TopWindow
0708ca94 00000028 B CTRPluginFramework::Window::BottomWindow
0708cabc 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708cac0 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708cacc 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
0708cad4 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
0708cad5 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
0708cad8 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
0708cae4 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
0708cb00 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
0708cb04 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
0708cb08 0000000c B CTRPluginFramework::Font::_mutex
0708cb14 00000004 B CTRPluginFramework::g_glyphAllocated
0708cb18 00000004 B CTRPluginFramework::g_fontAllocated
0708cb1c 00000004 b CTRPluginFramework::g_context
0708cb20 00000001 b CTRPluginFramework::ToggleFloat
0708cb21 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708cb24 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708cb28 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708cb2c 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708cb30 00000008 B CTRPluginFramework::ARHandler::Storage
0708cb38 00000010 B CTRPluginFramework::ARHandler::Data
0708cb48 00000008 B CTRPluginFramework::ARHandler::Offset
0708cb50 00000fa0 b CTRPluginFramework::arStack
0708daf0 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708daf4 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708db00 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708db04 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708db10 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0708db11 00000001 b CTRPluginFramework::g_newCondDataToggle
0708db12 00000001 b CTRPluginFramework::g_condAgainstData
0708db14 00000004 b CTRPluginFramework::__arCodeEditor
0708db18 0000000c B CTRPluginFramework::g_codeTypes
0708db24 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708db28 00000018 b __threads
0708db40 0000000c b __mutex
0708db4c 0000001c b CTRPluginFramework::g_dummy
0708db68 00000180 b CTRPluginFramework::g_keyName
0708dce8 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708dcec 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708dcf4 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
0708dcf8 00000004 b CTRPluginFramework::g_screenshotEntry
0708dcfc 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0708dd00 00000004 b CTRPluginFramework::g_OpenFileLock
0708dd04 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708dd08 00000040 b CTRPluginFramework::g_hookExportFile
0708dd48 00000004 b CTRPluginFramework::g_HookMode
0708dd4c 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
0708dd50 00000008 b CTRPluginFramework::g_textXpos
0708dd58 00000004 b CTRPluginFramework::g_mode
0708dd5c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708dd60 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708dd70 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708dd74 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708dd84 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708dd88 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708dd98 00000001 b CTRPluginFramework::g_progressLoop
0708dd9c 00000004 B CTRPluginFramework::_pool
0708dda0 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708dda8 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708ddb0 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708ddb8 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708ddc0 00000004 b arbiter
0708ddc4 00000004 b sharedFontAddr
0708ddc8 00000004 B g_sharedFont
0708ddcc 00000004 b srvRefCount
0708ddd0 00000004 b srvHandle
0708ddd4 00000004 b currentAddr
0708ddd8 00000004 b maxAddr
0708dddc 00000004 b minAddr
0708dde0 00000004 b cfguRefCount
0708dde4 00000004 b cfguHandle
0708dde8 00000001 b gspRunEvents
0708ddec 00000004 b gspEventThread
0708ddf0 00000004 b gspEvent
0708ddf4 00000001 b gspGpuRight
0708ddf8 00000004 b gspSharedMem
0708ddfc 00000004 b gspSharedMemHandle
0708de00 00000004 b gspRefCount
0708de04 00000004 b gspGpuHandle
0708de08 00000004 b acRefCount
0708de0c 00000004 b acHandle
0708de10 00000004 b amRefCount
0708de14 00000004 b amHandle
0708de18 00000004 b __sslc_refcount
0708de1c 00000004 B __sslc_servhandle
0708de20 00000001 b flagValue.0
0708de21 00000001 b flagInit.1
0708de24 00000004 b serviceName.6
0708de28 0000000c b aptFirstHook
0708de34 00000004 b aptLockHandle
0708de38 00000001 b usingIrrst
0708de3c 00000004 b hidRefCount
0708de40 00000006 b gRate
0708de48 00000006 b aVec
0708de50 00000004 b cPos
0708de54 00000004 b tPos
0708de58 00000004 b kRepeat
0708de5c 00000004 b kUp
0708de60 00000004 b kDown
0708de64 00000004 b kHeld
0708de68 00000004 b kOld
0708de6c 00000004 B hidSharedMem
0708de70 00000014 B hidEvents
0708de84 00000004 B hidMemHandle
0708de88 00000004 B hidHandle
0708de8c 00000004 b srvPmHandle
0708de90 00000080 b fsExemptArchives
0708df10 00000004 b fsuRefCount
0708df14 00000004 b fsuHandle
0708df18 00000004 V __ctru_heap_size
0708df1c 00000004 B __ctru_linear_heap
0708df20 00000004 B __ctru_heap
0708df24 00000004 b irrstRefCount
0708df28 00000004 b csPos
0708df2c 00000004 b kHeld
0708df30 00000004 B irrstSharedMem
0708df34 00000004 B irrstEvent
0708df38 00000004 B irrstMemHandle
0708df3c 00000004 B irrstHandle
0708df40 00000004 b (anonymous namespace)::get_static_cond()::once
0708df48 00000008 b (anonymous namespace)::fake_cond
0708df50 00000004 b (anonymous namespace)::static_cond
0708df54 00000004 b (anonymous namespace)::get_static_mutex()::once
0708df58 00000010 b (anonymous namespace)::fake_mutex
0708df68 00000004 b (anonymous namespace)::static_mutex
0708df6c 00000004 b (anonymous namespace)::__new_handler
0708df70 0000001c b (anonymous namespace)::emergency_pool
0708df8c 00000004 b init
0708df90 00000001 B __eh_globals_init::_S_init
0708df94 0000000c b (anonymous namespace)::eh_globals
0708dfa0 00000010 V std::string::_Rep::_S_empty_rep_storage
0708dfb0 0000000c b __sfp_recursive_mutex
0708dfc0 00000168 B __sf
0708e128 00000004 B __stdio_exit_handler
0708e12c 00000004 b __tz_mutex
0708e130 00000028 B __malloc_current_mallinfo
0708e158 00000004 B __malloc_max_total_mem
0708e15c 00000004 B __malloc_max_sbrked_mem
0708e160 00000004 B __malloc_top_pad
0708e164 00000004 b prev_tzenv
0708e168 0000000c b __tzname_dst
0708e174 0000000c b __tzname_std
0708e180 0000000c b __malloc_recursive_mutex
0708e18c 00000004 B _timezone
0708e190 00000004 B _daylight
0708e194 0000000c b __env_recursive_mutex
0708e1a0 00000004 b initial_env
0708e1a4 00000190 B __atexit0
0708e334 00000004 B __atexit
0708e338 0000000c B __atexit_recursive_mutex
0708e344 00000004 b __hndl_lock
0708e348 00000004 B fake_heap_start
0708e34c 00000004 B fake_heap_end
0708e350 00000004 b heap_start.0
0708e354 B __tls_start
0708e380 B __bss_end__
0708e380 A __end__
0708e380 B __tls_end
